Informe pràctica 4 - Benavente Daniel - Palacios Javier

- Fitxers involucrats:
	p4_Benavente_Daniel_Palacios_Javier.txt

	- Descripció: En aquesta part de la pràctica veurem la creació d'un dhcp per donar servei a diferents subxarxes. Aquest dhcp tindrà 2 interfícies de xarxa
	per poder donar servei a les dues subxarxes degut que encara no disposem de routers.
	A més de tenir 2 pools d'adreces per donar servei a les dues subxarxes també hem configurat ip's reservades exclusivament per certes màquines.
	A més a més, el servidor està configurat per controlar el temps màxim el qual otorga una ip a una màquina, el màxim, dns...

ÍNDEX
	
	1. FASE 1 CONFIGURACIÓ DEL ROUTERS DEL ENTORN
	2. FASE 2 CONFIGURACIÓ DHCP AL ENTORN
	3. FASE 3(Part1) CONFIGURACIÓ DE NAT (Sòrtida de xarxa interna a internet)
	4. FASE 4 CONFIGURAR EL DNS i SERVIDOR SSH A LA XARXA ACTUAL 
	5. FASE 3(Part2) CONFIGURACIÓ DE NAT (Des de fóra de la xarxa interna es puguin comunicar amb nosaltres)
	6. FASE 6 TALLAFOCS
	7. FASE 7 Script honeypot


FALTA
-- EXPLICAR BIEN COMO SE HA TRIANGULARIZADO LA RED
-- explicaciones routas, tener en cuenta a las redes, no solo pensar en routers

acess - server - usuari - acces ???


-- COMENTAR EN EL DHCP LOS MAX LEASE TIME POR DEFECTO ETC


####### FASE 1 CONFIGURACIÓ DEL ROUTERS DEL ENTORN #######

PASOS
- Configuració prèvia de virtualbox
- Configuracion de las maquinas
- Preparacion router servidores
- Preparacion router usuarios
- Preparacion router acceso
- Pruebas validacón



ROUTER SREVIDORS

	1. Obrim VirtualBox i creem una nova màquina anomenada ROUTER_SERVIDORS.

	2. Obrim la configuració de la màquina i l'apartat de xarxa afegirem(sino està ja), una xarxa
	amb mode NAT, per a poder instal·lar els paquets corresponents. 
		Encenem la màquina i entrem amb el nostre usuari root:
		
		Primer actualitzarem la màquina amb:
		
		#apt-get update
		#apt-get upgrade

		Ara ens asegurarem de tenir instal·lat el paquet iproute2 amb la comanda: 

		# dpkg -l | grep iproute2

		Si no ho tenim, l'instal·larem, ja que serà la nostra eina principal durant tot el procès de
		configuració.

		# apt install iproute2

		Una vegada tenim tot comprovat, apagarem la màquina i tornarem a la configuració de xarxa de 
		virutalbox per seguir els pasos del següent punt.

	3. Obrim la configuració de la màquina i a l'apartat de xarxa afegim 3 adaptadors de xarxa
		* Adaptador 1:
			- Configurat amb xarxa interna "xarxa-admin"
			- Al mateix apartat de xarxa, al subapartat avançat canviem la mac de l'adaptador per
			la següent: "080027100202".
		* Adaptador 2: 
			- Configurat amb xarxa interna "xarxa-backbone"
			- Al mateix apartat de xarxa, al subapartat avançat canviem la mac de l'adaptador per
			la següent: "080027100302".
		* Adaptador 3: 
			- Configurat amb xarxa interna "xarxa-servidors"
			- Al mateix apartat de xarxa, al subapartat avançat canviem la mac de l'adaptador per
			la següent: "080027100501".
			- Una vegada configurades els 3 adaptadors fem click a "Acceptar".

	4. Arrenquem la màquina per configurar-la
		* Configurem el fitxer de configuració /etc/networks/interfaces:
			# nano /etc/networks/interfaces

	
			# This file describes the network interfaces available on your system
			# and how to activate them. For more information, see interfaces(5).

			source /etc/network/interfaces.d/*

			# The loopback network interface
			auto lo
			iface lo inet loopback

			# The primary network interface
			#allow-hotplug enp0s3
			#iface enp0s3 inet dhcp


			#admin
			auto enp0s3
			iface enp0s3 inet static
			address 10.10.2.2
			netmask 255.255.255.240
			network 10.10.2.0
			gateway 10.10.2.1
			broadcast 10.10.2.15
			dns-nameservers 10.10.1.3 10.10.1.4

			#backbone
			auto enp0s8
			iface enp0s8 inet static
			address 10.10.3.2
			broadcast 10.10.3.3
			netmask 255.255.255.252
			network 10.10.3.0
			dns-nameservers 10.10.1.3 10.10.1.4

			#servers
			auto enp0s9
			iface enp0s9 inet static
			address 10.10.5.1
			netmask 255.255.255.240
			network 10.10.5.0
			broadcast 10.10.5.15
			dns-nameservers 10.10.1.3 10.10.1.4

			#----ROUTES----

			#hacia usuaris
			post-up route add -net 10.10.4.0 netmask 255.255.255.240 gw 10.10.3.1
			pre-down route del -net 10.10.4.0 netmask 255.255.255.240 gw 10.10.3.1
			#hacia dmz
			post-up route add -net 10.10.1.0 netmask 255.255.255.240 gw 10.10.3.1
			pre-down route del -net 10.10.1.0 netmask 255.255.255.240 gw 10.10.3.1
			#vpn
			#post-up route add -net 10.10.6.0 netmask 255.255.255.240 gw 10.10.2.2
			#pre-down route del -net 10.10.6.0 netmask 255.255.255.240 gw 10.10.2.2


			- INTERFÍCIE ADMIN (enp0s3)
			
				Primer de tot col·locarem com a estàtica la intefície amb "iface enp0s3 inet static", després, 
				com voldrem configurar la xarxa 10.10.2.0/28, els paràmetres seràn:

				address 10.10.2.2 --> adreça fixa per la interfície per a la xarxa admin
				netmask 255.255.255.240 --> Màscara de xarxa que fa referència a /28
				network 10.10.2.0 --> Identificador de xarxa
				gateway 10.10.2.1 --> Ip del router per defecte per aquesta xarxa.
				broadcast 10.10.2.15 --> Ip de broadcast
				dns-nameservers 10.10.1.3 10.10.1.4 --> Servidors dns

			- INTERFÍCIE BACKBONE (enp0s8)
		
				Primer de tot col·locarem com a estàtica la intefície amb "iface enp0s8 inet static", després, com voldrem configurar la xarxa
				10.10.3.0/30, els paràmetres seràn:

				address 10.10.3.2 --> adreça fixa per la interfície per a la xarxa backbone
				broadcast 10.10.3.3 --> adreça ip de broadcast
				netmask 255.255.255.252 --> Màscara de xarxa que fa referència a /30
				network 10.10.3.0 --> Identificador de xarxa
				dns-nameservers 10.10.1.3 10.10.1.4 --> Servidors dns

			- INTERFÍCIE SERVIDORS (enp0s9)
			
				Primer de tot col·locarem com a estàtica la intefície amb "iface enp0s9 inet static", després, com voldrem configurar la xarxa
				10.10.5.0/28, els paràmetres seràn:

				address 10.10.5.1 --> adreça fixa per la interfície per a la xarxa servidors
				broadcast 10.10.5.15 --> adreça ip de broadcast
				netmask 255.255.255.240 --> Màscara de xarxa que fa referència a /28
				network 10.10.5.0 --> Identificador de xarxa
				dns-nameservers 10.10.1.3 10.10.1.4 --> Servidors dns

			- Actualitzem els adaptadors de xarxa:

				# service networking restart					

			- RUTES
			
				1. Des de la màquina, fem "route -n" per veure les rutes que tenim ja configurades.

					Kernel IP routing table
					Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
					0.0.0.0         10.10.2.1       0.0.0.0         UG    0      0        0 enp0s3
					10.10.2.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s3
					10.10.3.0       0.0.0.0         255.255.255.252 U     0      0        0 enp0s8
					10.10.5.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s9

					Com es pot veure tenim configurades aquelles que nosaltres veiem físicament gràcies
					a les interfícies del router:
						0.0.0.0 --> ruta per defecte on l'indiquem que vagi al router d'accés
						10.10.2.0 --> xarxa admin (interfície 10.10.2.2)
						10.10.3.0 --> xarxa backbone (interfície 10.10.3.2)
						10.10.5.0 --> xarxa servidors (0.0.0.0 que fa referència a la interfície 10.10.5.1)


				2. Configuració de rutes per arribar a la xarxa DMZ i a la xarxa d'usuaris
					#hacia usuaris
					post-up route add -net 10.10.4.0 netmask 255.255.255.240 gw 10.10.3.1
					pre-down route del -net 10.10.4.0 netmask 255.255.255.240 gw 10.10.3.1
					#hacia dmz
					post-up route add -net 10.10.1.0 netmask 255.255.255.240 gw 10.10.3.1
					pre-down route del -net 10.10.1.0 netmask 255.255.255.240 gw 10.10.3.1
					#vpn
					#post-up route add -net 10.10.6.0 netmask 255.255.255.240 gw 10.10.2.2
					#pre-down route del -net 10.10.6.0 netmask 255.255.255.240 gw 10.10.2.2

					Com podem veure, les úniques que hem de configurar són aquells casos on des de
					router servidors arriba una petició per anar a xarxa usuaris (10.10.4.0).
					En aquest cas, redirigim la petició al router 10.10.3.1 (router usuaris)
					passant per la xarxa backbone.
					L'altre cas és per anar cap a la xarxa dmz (10.10.1.0). En aquest cas,
					redirigim la petició cap al router 10.10.3.1 (router usuaris) passant per
					la xarxa backbone.

				3. Ara torna revisar la taula d'enrutament amb "route -n":

				Kernel IP routing table
				Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
				0.0.0.0         10.10.2.1       0.0.0.0         UG    0      0        0 enp0s3
				10.10.1.0       10.10.3.1       255.255.255.240 UG    0      0        0 enp0s8
				10.10.2.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s3
				10.10.3.0       0.0.0.0         255.255.255.252 U     0      0        0 enp0s8
				10.10.4.0       10.10.3.1       255.255.255.240 UG    0      0        0 enp0s8
				10.10.5.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s9

				Com es pot veure ja tenim totes les rutes establertes de forma permanent, és a dir,
				cada vegada que arranquem la màquina estaran configurades.


ROUTER USUARIS
	En aquesta màquina seguriem els 2 primers punts que el ROUTER SERVIDORS, per tant crearem una màquina
	anomenada ROUTER USUARIS i seguirem els pasos per actualitzar i revisar que tenim els 
	paquets necessaris.
	
	Ara anirem a la configuració per afegir els nous adaptadors de xarxa amb les seves xarxes corresponents: 
	
	Obrim la configuració de la màquina i a l'apartat de xarxa afegim 3 adaptadors de xarxa
		* Adaptador 1:
			- Configurat amb xarxa interna "xarxa-usuaris"
			- Al mateix apartat de xarxa, al subapartat avançat canviem la mac de l'adaptador per
			la següent: "080027100401".
		* Adaptador 2: 
			- Configurat amb xarxa interna "xarxa-backbone"
			- Al mateix apartat de xarxa, al subapartat avançat canviem la mac de l'adaptador per
			la següent: "080027100301".
		* Adaptador 3: 
			- Configurat amb xarxa interna "xarxa-dmz"
			- Al mateix apartat de xarxa, al subapartat avançat canviem la mac de l'adaptador per
			la següent: "080027100102".
			- Una vegada configurades els 3 adaptadors fem click a "Acceptar".


	4. Arrenquem la màquina per configurar-la
		* Configurem el fitxer de configuració /etc/networks/interfaces:
			# nano /etc/networks/interfaces
			
			# This file describes the network interfaces available on your system
			# and how to activate them. For more information, see interfaces(5).

			source /etc/network/interfaces.d/*

			# The loopback network interface
			auto lo
			iface lo inet loopback

			# The primary network interface
			#allow-hotplug enp0s3
			#iface enp0s3 inet dhcp


			#usuaris
			auto enp0s3
			iface enp0s3 inet static
			address 10.10.4.1
			netmask 255.255.255.240
			network 10.10.4.0
			broadcast 10.10.4.15
			dns-nameservers 10.10.1.3 10.10.1.4

			#backbone
			auto enp0s8
			iface enp0s8 inet static
			address 10.10.3.1
			broadcast 10.10.3.3
			netmask 255.255.255.252
			network 10.10.3.0
			dns-nameservers 10.10.1.3 10.10.1.4

			#dmz
			auto enp0s9
			iface enp0s9 inet static
			address 10.10.1.2
			netmask 255.255.255.240
			network 10.10.1.0
			broadcast 10.10.1.15
			gateway 10.10.1.1
			dns-nameservers 10.10.1.3 10.10.1.4

			#----ROUTES----

			#hacia servidors
			post-up route add -net 10.10.5.0 netmask 255.255.255.240 gw 10.10.3.2
			pre-down route del -net 10.10.5.0 netmask 255.255.255.240 gw 10.10.3.2
			#hacia admin
			#post-up route add -net 10.10.2.0 netmask 255.255.255.240 gw 10.10.3.1
			#pre-down route del -net 10.10.2.0 netmask 255.255.255.240 gw 10.10.3.1

			#vpn
			#post-up route add -net 10.10.6.0 netmask 255.255.255.240 gw 10.10.2.2
			#pre-down route del -net 10.10.6.0 netmask 255.255.255.240 gw 10.10.2.2

			- INTERFÍCIE USUARIS (enp0s3)
			
				Primer de tot col·locarem com a estàtica la intefície amb "iface enp0s3 inet static", després, 
				com voldrem configurar la xarxa 10.10.4.0/28, els paràmetres seràn:

				address 10.10.4.1 --> adreça fixa per la interfície per a la xarxa usuaris
				netmask 255.255.255.240 --> Màscara de xarxa que fa referència a /28
				network 10.10.4.0 --> Identificador de xarxa
				broadcast 10.10.4.15 --> Ip de broadcast
				dns-nameservers 10.10.1.3 10.10.1.4 --> Servidors dns

			
			- INTERFÍCIE BACKBONE (enp0s8)
		
				Primer de tot col·locarem com a estàtica la intefície amb "iface enp0s8 inet static", després, com voldrem configurar la xarxa
				10.10.3.0/30, els paràmetres seràn:

				address 10.10.3.2 --> adreça fixa per la interfície per a la xarxa backbone
				netmask 255.255.255.252 --> Màscara de xarxa que fa referència a /30
				broadcast 10.10.3.3 --> adreça ip de broadcast
				network 10.10.3.0 --> Identificador de xarxa
				dns-nameservers 10.10.1.3 10.10.1.4 --> Servidors dns
			
			- INTERFÍCIE DMZ (enp0s9)
		
				Primer de tot col·locarem com a estàtica la intefície amb "iface enp0s9 inet static", després, com voldrem configurar la xarxa
				10.10.1.0/28, els paràmetres seràn:

				address 10.10.1.2 --> adreça fixa per la interfície per a la xarxa backbone
				netmask 255.255.255.252 --> Màscara de xarxa que fa referència a /28
				network 10.10.1.0 --> Identificador de xarxa
				broadcast 10.10.1.15--> adreça ip de broadcast
				gateway 10.10.1.1 --> Ip del router per defecte per aquesta xarxa.
				dns-nameservers 10.10.1.3 10.10.1.4 --> Servidors dns
				
				
			- Actualitzem els adaptadors de xarxa:

				# service networking restart					

			- RUTES
			
				1. Des de la màquina, fem "route -n" per veure les rutes que tenim ja configurades.

					Kernel IP routing table
					Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
					0.0.0.0         10.10.1.1       0.0.0.0         UG    0      0        0 enp0s9
					10.10.1.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s9
					10.10.3.0       0.0.0.0         255.255.255.252 U     0      0        0 enp0s8
					10.10.4.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s3

					Com es pot veure tenim configurades aquelles que nosaltres veiem físicament gràcies
					a les interfícies del router:
						0.0.0.0 --> ruta per defecte on l'indiquem que vagi al router d'accés
						10.10.1.0 --> xarxa dmz (interfície 10.10.1.1)
						10.10.3.0 --> xarxa backbone (interfície 10.10.3.1)
						10.10.4.0 --> xarxa servidors (0.0.0.0 que fa referència a la interfície 10.10.4.1)
					
				2. Configuració de rutes per arribar a la xarxa servidors

					#hacia servidors
					post-up route add -net 10.10.5.0 netmask 255.255.255.240 gw 10.10.3.2
					pre-down route del -net 10.10.5.0 netmask 255.255.255.240 gw 10.10.3.2

					En aquest cas, només haurem de configurar el cas on ens arriba una petició per
					anar a la xarxa servidors (10.10.5.0).

					En aquest cas, redirigim la petició al router 10.10.3.2 (router servidors)
					passant per la xarxa backbone.

				3. Ara torna revisar la taula d'enrutament amb "route -n":

					Kernel IP routing table
					Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
					0.0.0.0         10.10.1.1       0.0.0.0         UG    0      0        0 enp0s9
					10.10.1.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s9
					10.10.3.0       0.0.0.0         255.255.255.252 U     0      0        0 enp0s8
					10.10.4.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s3

					Com es pot veure ja tenim totes les rutes establertes de forma permanent, és a dir,
					cada vegada que arranquem la màquina estaran configurades.
			

ROUTER ACCES
	En aquesta màquina seguriem els 2 primers punts que el ROUTER SERVIDORS, per tant crearem una màquina
	anomenada ROUTER ACCES i seguirem els pasos per actualitzar i revisar que tenim els 
	paquets necessaris.
	
	Ara anirem a la configuració per afegir els nous adaptadors de xarxa amb les seves xarxes corresponents: 
	
	Ob3. rim la configuració de la màquina i a l'apartat de xarxa afegim 3 adaptadors de xarxa
		* Adaptador 1:
			- Configurat amb xaadaptador pont
- Al mateixeiapartat de xarxa, al subapartat avançat canviem la mac de l'adaptador per
			la següent: "08080027000001
		* Adaptador 2: 
			- Configurat amb xarxa interna "xaxarxa-admin			- Al mateix apartat de xarxa, al subapartat avançat canviem la mac de l'adaptador per
			la següent: "08080027100201
		* Adaptador 3: 
			- Configurat amb xarxa interna "xaxarxa-dmz			- Al mateix apartat de xarxa, al subapartat avançat canviem la mac de l'adaptador per
			la següent: "08080027100101
			- Una vegada configurades els 3 adaptadors fem click a "Acceptar".


	4. Arrenquem la màquina per configurar-la
		* Configurem el fitxer de configuració /etc/networks/interfaces:
			# nano /etc/networks/interfaces

	
				# This file describes the network interfaces available on your system
			# and how to activate them. For more information, see interfaces(5).

			source /etc/network/interfaces.d/*

			# The loopback network interface
			auto lo
			iface lo inet loopback

			# The primary network interface
			#allow-hotplug enp0s3
			#iface enp0s3 inet dhcp


			#troncal
			auto enp0s3
			iface enp0s3 inet dhcp

			#admin
			auto enp0s8
			iface enp0s8 inet static
			address 10.10.2.1
			broadcast 10.10.2.15
			netmask 255.255.255.240
			network 10.10.2.0
			dns-nameservers 10.10.1.3 10.10.1.4

			#dmz
			auto enp0s9
			iface enp0s9 inet static
			address 10.10.1.1
			netmask 255.255.255.240
			network 10.10.1.0
			broadcast 10.10.1.15
			dns-nameservers 10.10.1.3 10.10.1.4

			#----ROUTES----

			#hacia usuaris
			post-up route add -net 10.10.4.0 netmask 255.255.255.240 gw 10.10.1.2
			pre-down route del -net 10.10.4.0 netmask 255.255.255.240 gw 10.10.1.2
			#hacia servidors
			post-up route add -net 10.10.5.0 netmask 255.255.255.240 gw 10.10.2.2
			pre-down route del -net 10.10.5.0 netmask 255.255.255.240 gw 10.10.2.2

			#hacia backbone
			post-up route add -net 10.10.3.0 netmask 255.255.255.252 gw 10.10.1.2
			pre-down route del -net 10.10.3.0 netmask 255.255.255.252 gw 10.10.1.2
			#post-up route add -net 10.10.3.0 netmask 255.255.255.252 gw 10.10.2.2
			#pre-down route del -net 10.10.3.0 netmask 255.255.255.252 gw 10.10.2.2

			#vpn
			#post-up route add -net 10.10.6.0 netmask 255.255.255.240 gw 10.10.2.2
			#pre-down route del -net 10.10.6.0 netmask 255.255.255.240 gw 10.10.2.2

			- INTERFÍCIE TRONCAL (enp0s3)
				Per aquesta interfície serà en dhcp "iface enp0s3 inet dhcp", ja que el que volem és
				a partir d'aquesta poder tenir comunicació amb l'exterior.

			- INTERFÍCIE ADMIN (enp0s8)
			
				Primer de tot col·locarem com a estàtica la intefície amb "iface enp0s8 inet static", després, 
				com voldrem configurar la xarxa 10.10.2.0/28, els paràmetres seràn:

				address 10.10.2.1 --> adreça fixa per la interfície per a la xarxa admin
				netmask 255.255.255.240 --> Màscara de xarxa que fa referència a /28
				network 10.10.2.0 --> Identificador de xarxa
				broadcast 10.10.2.15 --> Ip de broadcast
				dns-nameservers 10.10.1.3 10.10.1.4 --> Servidors dns

			- INTERFÍCIE DMZ (enp0s9)
		
				Primer de tot col·locarem com a estàtica la intefície amb "iface enp0s8 inet static", després, com voldrem configurar la xarxa
				10.10.3.0/28, els paràmetres seràn:

				address 10.10.1.1 --> adreça fixa per la interfície per a la xarxa DMZ
				broadcast 10.10.1.15 --> adreça ip de broadcast
				netmask 255.255.255.240 --> Màscara de xarxa que fa referència a /28
				network 10.10.1.0 --> Identificador de xarxa
				dns-nameservers 10.10.1.3 10.10.1.4 --> Servidors dns

			- Actualitzem els adaptadors de xarxa:

				# service networking restart					

			- RUTES
			
				1. Des de la màquina, fem "route -n" per veure les rutes que tenim ja configurades.
				
					Kernel IP routing table
					Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
					0.0.0.0         192.168.1.1     0.0.0.0         UG    0      0        0 enp0s3
					10.10.1.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s9
					10.10.2.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s8
					192.168.1.0     0.0.0.0         255.255.255.0   U     0      0        0 enp0s3

					Com es pot veure tenim configurades aquelles que nosaltres veiem físicament gràcies
					a les interfícies del router:
						0.0.0.0 --> ruta per defecte on l'indiquem que vagi al router que en aquest cas tinc
						a casa meva
						10.10.2.0 --> xarxa admin (interfície 10.10.2.1)
						10.10.1.0 --> xarxa DMZ (interfície 10.10.1.1)
						192.168.1.0 --> Si volem a anar cap a internet anem per la ruta per defecte


				2. Configuració de rutes per arribar a la xarxa servidors, backbone i a la xarxa d'usuaris
					#hacia usuaris
					post-up route add -net 10.10.4.0 netmask 255.255.255.240 gw 10.10.1.2
					pre-down route del -net 10.10.4.0 netmask 255.255.255.240 gw 10.10.1.2
					#hacia servidors
					post-up route add -net 10.10.5.0 netmask 255.255.255.240 gw 10.10.2.2
					pre-down route del -net 10.10.5.0 netmask 255.255.255.240 gw 10.10.2.2

					#hacia backbone
					post-up route add -net 10.10.3.0 netmask 255.255.255.252 gw 10.10.1.2
					pre-down route del -net 10.10.3.0 netmask 255.255.255.252 gw 10.10.1.2

					Com podem veure, les úniques que hem de configurar són aquells casos on des de
					router acces arriba una petició per anar a xarxa usuaris (10.10.4.0).
					En aquest cas, redirigim la petició al router 10.10.1.2 (router usuaris)
					passant per la xarxa dmz.
					L'altre cas és per anar cap a la xarxa dmz (10.10.3.0). En aquest cas,
					redirigim la petició cap al router 10.10.1.2 (router usuaris) passant per
					la xarxa dmz.
					I per últim el cas per anar a xarxa servidors (10.10.5.0). En aquest cas,
					redirigim la petició cap al router 10.10.2.2 (router servidors) passant per
					la xarxa admin.

				3. Ara tornem a revisar la taula d'enrutament amb "route -n":

					Kernel IP routing table
					Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
					0.0.0.0         192.168.1.1     0.0.0.0         UG    0      0        0 enp0s3
					10.10.1.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s9
					10.10.2.0       0.0.0.0         255.255.255.240 U     0      0        0 enp0s8
					10.10.3.0       10.10.1.2       255.255.255.252 UG    0      0        0 enp0s9
					10.10.4.0       10.10.1.2       255.255.255.240 UG    0      0        0 enp0s9
					10.10.5.0       10.10.2.2       255.255.255.240 UG    0      0        0 enp0s8
					192.168.1.0     0.0.0.0         255.255.255.0   U     0      0        0 enp0s3

				Com es pot veure ja tenim totes les rutes establertes de forma permanent, és a dir,
				cada vegada que arranquem la màquina estaran configurades.


NOTA: una vegada configurats els 3 routers, és necessàri per cadascun d'ells modificar el fitxer
/etc/sysctl.conf afegint la línia següent:
	
	# Uncomment the next line to enable packet forwarding for IPv4
	net.ipv4.ip_forward=1

En cas de ja existir, només ens hem de fixar que estigui igualada a 1 i no a 0.


#------------ CONFIGURACIÓ DEL SERVIDOR DHCP ------------#

1. Obrim VirtualBox i creem una nova màquina anomenada DHCP-SERVER.

2. Obrim la configuració de la màquina i l'apartat de xarxa afegirem(sino està ja), una xarxa
amb mode NAT, per a poder instal·lar els paquets corresponents. 
	Encenem la màquina i entrem amb el nostre usuari root:
	
	Primer actualitzarem la màquina amb:
	
	#apt-get update
	#apt-get upgrade

	Ara ens asegurarem de tenir instal·lat el paquet iproute2 amb la comanda: 

	# dpkg -l | grep iproute2

	Si no ho tenim, l'instal·larem, ja que serà la nostra eina principal durant tot el procès de
	configuració.

	# apt install iproute2

	Ara instal·lem el paquet de dhcp-server de isc:

	# apt install isc-dhcp-server

	Una vegada fet se'ns haurà creat el firectori de configuració /etc/dhcp on tindrem tots els fitxers
	de configuració pel nostre servei dhcp

	Una vegada tenim tot comprovat, apagarem la màquina i tornarem a la configuració de xarxa de 
	virutalbox per seguir els pasos del següent punt.

3. Obrim la configuració de la màquina i a l'apartat de xarxa configurem l'adaptador 1:
	* Adaptador 1:
		- Configurat amb xarxa interna "xarxa-servidors"
		- Al mateix apartat de xarxa, al subapartat avançat canviem la mac de l'adaptador per
		la següent: "080027100502".

4. Arrenquem la màquina per configurar-la
	* Configurem el fitxer de configuració /etc/networks/interfaces:

		# This file describes the network interfaces available on your system
		# and how to activate them. For more information, see interfaces(5).

		source /etc/network/interfaces.d/*

		# The loopback network interface
		auto lo
		iface lo inet loopback

		# The primary network interface
		auto enp0s3
		iface enp0s3 inet static
			broadcast 10.10.5.15
			network 10.10.5.0
			netmask 255.255.255.240
			address 10.10.5.2
			gateway 10.10.5.1

		Com podem veure tenim configurada l'interfície de forma estàtica amb: 

			broadcast 10.10.5.15 --> adreça de broadcast
			network 10.10.5.0 --> identificador de xarxa
			netmask 255.255.255.240 --> Màscara de subxarxa
			address 10.10.5.2 --> Adreça del servidor dhcp
			gateway 10.10.5.1 --> Router assignat al servidor dhcp
		
		Una vegada fet reiniciem la xarxa:
			# service networking restart

	* Configurem el fitxer de configuració del dhcp /etc/dhcp/dhcpd.conf

		# dhcpd.conf
		#
		# Sample configuration file for ISC dhcpd
		#

		# option definitions common to all supported networks...
		option domain-name "seax.edu";
		option domain-name-servers 10.10.1.3, 10.10.1.4; 

		default-lease-time 600;
		max-lease-time 7200;
		min-lease-time 500;

		# The ddns-updates-style parameter controls whether or not the server will
		# attempt to do a DNS update when a lease is confirmed. We default to the
		# behavior of the version 2 packages ('none', since DHCP v2 didn't
		# have support for DDNS.)
		ddns-update-style none;

		# If this DHCP server is the official DHCP server for the local
		# network, the authoritative directive should be uncommented.
		authoritative;

		# Use this to send dhcp log messages to a different log file (you also
		# have to hack syslog.conf to complete the redirection).
		#log-facility local7;

		# No service will be given on this subnet, but declaring it helps the 
		# DHCP server to understand the network topology.

		# Subnet declaration.

		#xarxa servidors
		subnet 10.10.5.0 netmask 255.255.255.240 {
		option routers 10.10.5.1;
		option subnet-mask 255.255.255.240;
		#option broadcast-address 10.10.5.255;
		default-lease-time 800;
		max-lease-time 10000;
		option domain-name "seax.edu";
		option domain-name-servers 10.10.1.3;
		range 10.10.5.3 10.10.5.10;
		range 10.10.5.12 10.10.5.14;
		}
		host monitor_xarxa_10.10.5.0 {
		option host-name "monitor-xarxa-servidors";
		hardware ethernet 08:00:27:10:00:11;
		fixed-address 10.10.5.11;
		}

		#xarxa usuaris
		subnet 10.10.4.0 netmask 255.255.255.240 {
		option routers 10.10.4.1;
		range 10.10.4.3 10.10.4.10;
		range 10.10.4.12 10.10.4.14;
		}
		host monitor_xarxa_10.10.4.0 {
		option host-name "monitor-xarxa-usuaris";
		hardware ethernet 08:00:27:10:00:11;
		fixed-address 10.10.4.11;
		}

		#xarxa DMZ
		subnet 10.10.1.0 netmask 255.255.255.240 {
		option routers 10.10.1.1;
		range 10.10.1.5 10.10.1.10;
		range 10.10.1.12 10.10.1.14;
		}
		host monitor_xarxa_10.10.1.0 {
		option host-name "monitor-xarxa";
		hardware ethernet 08:00:27:10:00:11;
		fixed-address 10.10.1.11;
		}
		#xarxa admin
		subnet 10.10.2.0 netmask 255.255.255.240 {
		option routers 10.10.2.1;
		range 10.10.2.6 10.10.2.10;
		range 10.10.2.12 10.10.2.14;
		}
		host monitor_xarxa_10.10.2.0 {
		option host-name "monitor-xarxa-admin";
		hardware ethernet 08:00:27:10:00:11;
		fixed-address 10.10.2.11;
		}

		# This declaration allows BOOTP clients to get dynamic addresses,
		# which we don't really recommend.

		#subnet 10.254.239.32 netmask 255.255.255.224 {
		#  range dynamic-bootp 10.254.239.40 10.254.239.60;
		#  option broadcast-address 10.254.239.31;
		#  option routers rtr-239-32-1.example.org;
		#}

		# A slightly different configuration for an internal subnet.
		#subnet 10.5.5.0 netmask 255.255.255.224 {
		#  range 10.5.5.26 10.5.5.30;
		#  option domain-name-servers ns1.internal.example.org;
		#  option domain-name "internal.example.org";
		#  option routers 10.5.5.1;
		#  option broadcast-address 10.5.5.31;
		#  default-lease-time 600;
		#  max-lease-time 7200;
		#}

		# Hosts which require special configuration options can be listed in
		# host statements.   If no address is specified, the address will be
		# allocated dynamically (if possible), but the host-specific information
		# will still come from the host declaration.

		#host passacaglia {
		#  hardware ethernet 0:0:c0:5d:bd:95;
		#  filename "vmunix.passacaglia";
		#  server-name "toccata.example.com";
		#}

		# Fixed IP addresses can also be specified for hosts.   These addresses
		# should not also be listed as being available for dynamic assignment.
		# Hosts for which fixed IP addresses have been specified can boot using
		# BOOTP or DHCP.   Hosts for which no fixed address is specified can only
		# be booted with DHCP, unless there is an address range on the subnet
		# to which a BOOTP client is connected which has the dynamic-bootp flag
		# set.
		#host fantasia {
		#  hardware ethernet 08:00:07:26:c0:a5;
		#  fixed-address fantasia.example.com;
		#}

		# You can declare a class of clients and then do address allocation
		# based on that.   The example below shows a case where all clients
		# in a certain class get addresses on the 10.17.224/24 subnet, and all
		# other clients get addresses on the 10.0.29/24 subnet.

		#class "foo" {
		#  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
		#}

		#shared-network 224-29 {
		#  subnet 10.17.224.0 netmask 255.255.255.0 {
		#    option routers rtr-224.example.org;
		#  }
		#  subnet 10.0.29.0 netmask 255.255.255.0 {
		#    option routers rtr-29.example.org;
		#  }
		#  pool {
		#    allow members of "foo";
		#    range 10.17.224.10 10.17.224.250;
		#  }
		#  pool {
		#    deny members of "foo";
		#    range 10.0.29.10 10.0.29.230;
		#  }
		#}
		
		Explicació POOL's d'adreces de la configuració.
		
		POOL d'adreces per la xarxa Servidors
			
			#xarxa servidors
			subnet 10.10.5.0 netmask 255.255.255.240 { --> definició de la subnet per la xarxa servidors indicant la ip de la xarxa 
						    							   i la mascara
			
			option routers 10.10.5.1; --> indica el router que de la subxarxa del client
			option subnet-mask 255.255.255.240; --> indica la màscara de subxarxa del client
			option broadcast-address 10.10.5.15; --> indica la l'adreça de broadcast del client
			default-lease-time 800; --> temps en segons al qual expira l'assignaió de la adreça ip obtinguda
			max-lease-time 10000; --> temps màxim en segons al qual expira l'assignaió de la adreça ip obtinguda
			option domain-name "seax.edu"; --> domini en el qual s'actualitza el dns
			option domain-name-servers 10.10.1.3; --> definició de la ip del dns que dòna suport a la subxarxa.
			range 10.10.5.3 10.10.5.10; --> Rang d'ip's que s'assignen dinàmicament per màquines de la subxarxa 10.10.5.0
			range 10.10.5.12 10.10.5.14; --> Segon rang d'ip's que s'assignen dinàmicament
			}
			
			host monitor_xarxa_10.10.5.0 {
			option host-name "monitor-xarxa-servidors";
			hardware ethernet 08:00:27:10:00:11;
			fixed-address 10.10.5.11;
			}
			
			Com podem veure tenim el monitor_xarxa_10.10.5.0 on aquest és una reserva que fem per la màquina
			amb MAC 08:00:27:10:00:11 per a què sempre se li assigni al arrencar des de la xarxa dmz la ip 10.10.5.11.


		POOL d'adreces per a la xarxa dmz		
			#xarxa usuaris
			subnet 10.10.4.0 netmask 255.255.255.240 { --> definició de la subnet per la xarxa dmz indicant la ip de xarxa i la màscara
			option routers 10.10.4.1; --> Definició del router de la xarxa
			range 10.10.4.3 10.10.4.10; --> Primer rang d'adreces ip que pot assignar el servidor dhcp
			range 10.10.4.12 10.10.4.14; --> Segon rang d'adreces ip que pot assignar el servidor dhcp
			}
			
			host monitor_xarxa_10.10.4.0 {
			option host-name "monitor-xarxa-usuaris";
			hardware ethernet 08:00:27:10:00:11;
			fixed-address 10.10.4.11;
			}

			Com podem veure tenim el monitor_xarxa_10.10.4.0 on aquest és una reserva que fem per la màquina
			amb MAC 08:00:27:10:00:11 per a què sempre se li assigni al arrencar des de la xarxa dmz la ip 10.10.4.11.

		POOL d'adreces per a la xarxa dmz
		
			#xarxa DMZ
			subnet 10.10.1.0 netmask 255.255.255.240 { --> definició de la subnet per la xarxa dmz indicant la ip de xarxa i la màscara
			option routers 10.10.1.1; --> Definició del router de la xarxa
			range 10.10.1.5 10.10.1.10; --> Primer rang d'adreces ip que pot assignar el servidor dhcp
			range 10.10.1.12 10.10.1.14; --> Segon rang d'adreces ip que pot assignar el servidor dhcp
			}
			
			host monitor_xarxa_10.10.1.0 {
			option host-name "monitor-xarxa";
			hardware ethernet 08:00:27:10:00:11;
			fixed-address 10.10.1.11;
			}
			
			Com podem veure tenim el monitor_xarxa_10.10.1.0 on aquest és una reserva que fem per la màquina
			amb MAC 08:00:27:10:00:11 per a què sempre se li assigni al arrencar des de la xarxa dmz la ip 10.10.1.11.
			
			
		POOL d'adreces per a la xarxa admin

			#xarxa admin
			subnet 10.10.2.0 netmask 255.255.255.240 { --> definició de la subnet per la xarxa dmz indicant la ip de xarxa i la màscara
			option routers 10.10.2.1; --> Definició del router de la xarxa
			range 10.10.2.6 10.10.2.10; --> Primer rang d'adreces ip que pot assignar el servidor dhcp
			range 10.10.2.12 10.10.2.14; --> Segon rang d'adreces ip que pot assignar el servidor dhcp
			}
			host monitor_xarxa_10.10.2.0 {
			option host-name "monitor-xarxa-admin";
			hardware ethernet 08:00:27:10:00:11;
			fixed-address 10.10.2.11;
			}

			Com podem veure tenim el monitor_xarxa_10.10.2.0 on aquest és una reserva que fem per la màquina
			amb MAC 08:00:27:10:00:11 per a què sempre se li assigni al arrencar des de la xarxa admin la ip 10.10.2.11.
			
			
	* Configurem el fitxer de configuració /etc/default/isc-dhcp-server afegint la interfície que volem que escolti
	el servidor dhcp

		INTERFACESv4="enp0s3"


	* Insalem el paquet isc-dhcp-relay per cadascun dels routers per tal que els routers reenviin els paquets dhcp
	i no els descartin:

		Exemple amb la màquina ROUTER_SERVIDORS)
			1. obrim la màquina amb accés a internet (configurem una dels adaptadors de xarxa amb NAT)
			2. Arranquem la màquina
			3. instal·lem el paquet: #apt install isc-dhcp-relay
			4. Una vegada executa't sortirà una assistent per configuracions bàsiques:
				- PAS 1: Afegim la ip del nostre servidor dhcp --> 10.10.5.2
				- Afegim les interfícies que escoltarà: enp0s3, enps8, enp0s9
				- Afegim el paràmetre "-D" perquè el servei relay s'executi en segon plà.
			5. Una vegada fet el pas 4 acabarà l'assistent informant de que aquesta informació es troba al 
			fitxer /etc/default/isc-dhcp-relay

				# Defaults for isc-dhcp-relay initscript
				# sourced by /etc/init.d/isc-dhcp-relay
				# installed at /etc/default/isc-dhcp-relay by the maintainer scripts

				#
				# This is a POSIX shell fragment
				#

				# What servers should the DHCP relay forward requests to?
				SERVERS="10.10.5.2"

				# On what interfaces should the DHCP relay (dhrelay) serve DHCP requests?
				INTERFACES="enp0s3 enp0s8 enp0s9"

				# Additional options that are passed to the DHCP relay daemon?
				OPTIONS="-D"


####### 3. FASE 3 CONFIGURACIÓ DE NAT (Sòrtida de xarxa interna a internet) #######

Descripció: Aquesta fase consisteix en implementar el servei NAT al router d'accés per permetre
la comunicació de dispositius de la nostra xarxa interna amb l'exterior

Configuració:

	1. Encenem el router d'accés.
	2. Ens assegurem de tenir instal·lades les iptables a la nostra màquina amb: 
	
		# apt install iptables

	3. Afegim les iptables per cadascuna de les xarxes que tindrà dispositius que vulguin sortir a internet.
	Per fer-ho utilitzem DynamicNat per poder enmascarar la ip privada del dispositiu que vol
	sortir a internet amb la ip que correspon a la interfície del router d'accés que surt cap a internet:
		
		# iptables -t nat -A POSTROUTING -s 10.10.4.0/28 -o enp0s3 -j MASQUERADE   --> usuaris 
		# iptables -t nat -A POSTROUTING -s 10.10.1.0/28 -o enp0s3 -j MASQUERADE   --> dmz
		# iptables -t nat -A POSTROUTING -s 10.10.5.0/28 -o enp0s3 -j MASQUERADE   --> Servidors
		# iptables -t nat -A POSTROUTING -s 10.10.2.0/28 -o enp0s3 -j MASQUERADE   --> admin

		Paràmetres de la comanda:
		
		# iptables -t <tipus> -A POSTROUTING -s <ip> -o <interficie> -j MASQUERADE

			-t <tipus> --> tipus de la iptable (en aquest cas interesa nat)
			-A POSTROUTING --> Afegeix (Add) una regla a la cadena POSTROUTING
			-s <ip> --> S'hi aplica als paquets que tenguin com a adreça origen <ip>
			-o <interfície> --> S'hi aplica als paquets que surtin (out-interface) per <interfície>
			-j MASQUERADE --> S'utilitza per canviar l'adreça privada del dispositiu per l'adreça
			que correspon a la interfície del router que en aquest cas pertany a la troncal.

		Per confirmar que s'ha afegit correctament, podem llistar les taules que fan referència a la nat amb la comanda:	
			
			# iptables -t nat -L -n

	4. Ara prepararem un fitxer amb totes les regles, per poder fer-les persistents a la nostra màquina:

		- Guardem en un fitxer la configuració actual que hem fet al pas anterior 

			# iptables-save > /etc/iptables.up.rules
			
		- Creem un script per tal de fer el restore de la configuració de iptables.up.rules
		cada vegada que arrenquem la màquina.

			# nano /etc/network/if-pre-up.d/iptables
		
				#!/bin/bash
				/sbin/iptables-restore < /etc/iptables.up.rules

		- Donem permisos d'execució a l'script per que tot funcioni correctament.

			# chmod +x /etc/network/if-pre-up.d/iptables

	5. Reiniciem la màquina i comprovem amb la comanda "iptables -t nat -L -n" que les iptables
	segueixen configurades i establertes.
	
		!!!!FALTA FOTO DE LES IPTABLES!!!!



####### 4. FASE 4 CONFIGURAR EL DNS i SERVIDOR SSH A LA XARXA ACTUAL #######
		
	#### 4.1. MODIFICACIONS PREVIES VIRTUALBOX ####

		Primer creem dues maquines virtuals anomenades DNS1 i DNS2 amb el sistema operatiu debian 10 (sense interfície gràfica), per a cada
		màquina farem el següent:

		DNS1:
			Anirem a la configuració de la màquina, i a l'apartat de Xarxa activem (si no hi està ja) un Adaptador de xarxa en mode Xarxa
			interna i un segon adaptador de xarxa en mode Adaptador Pont. Dels paràmetres Avanaçats per el primer adaptador modificarem la
			direcció MAc per "08:00:27:10:01:03" i li posarem el nom de "xarxa-dmz" al nom de la nostra xarxa, en canvi, per el segon no ens
			fara falta modificar res.

			Resum configuració:
				Nom màquina: DNS1
				SO: Debian 10 (Buster / sense intefície gràfica)
				Adaptador 1: Adaptador de xarxa de tipus interna
										MAC: 08:00:27:10:01:03
				Adaptador 2: Adaptador de xarxa de tipus Adaptador Pont

		DN2:
			Per aquesta segona màquina seguirem el mateix procès que la primera amb la diferència de la Mac que assignarem al primer Adaptador
			(xarxa interna) serà "08:00:27:10:01:04".
				Resum configuració:
					Nom màquina: DNS2
					SO: Debian 10 (Buster / sense intefície gràfica)
					Adaptador 1: Adaptador de xarxa de tipus interna
											MAC: 08:00:27:10:01:04
					Adaptador 2: Adaptador de xarxa de tipus Adaptador Pont

		IMPORTANT: En aquest procès i per evitar possibles errors, s'han configurat IP's fixes de la xarxa a la que es troba connectada les
		màquines DNS1 i DNS2 (tot i que pot funcionar amb la IP donada per el servidor DHCP que hi hagi configurat a la nostra xarxa).


	#### 4.2. CONFIGURACIONS PREVIES DE LES MÀQUINES ####

		Amb tota la configuració prèvia de VirutalBox finalitzada, encenem les màquines i tornem a entrar com a root per configurar les
		direccions IP estàtiques de les nostres interfícies al fitxer (/etc/network/interfaces):

		MÀQUINA DNS1
			Començarem modificant l'interfíce de la xarxa interna, amb el nom en aquest cas "enp0s3", seguint els següents paràmetres:

				Primer de tot col·locarem com a estàtica la intefície amb "iface enp0s3 inet static", després, com voldrem configurar la xarxa
				10.10.1.0/28, els paràmetres seràn:

				address 10.10.1.3 --> adreça fixa del nostre servidor Master
				netmask 255.255.255.240 --> Màscara de xarxa que fa referència a /28
				network 10.10.1.0 --> Identificador de xarxa
				dns-nameservers 10.10.1.3 --> Ip del Servidor DNS (en aquest cas s'està refernciant a ell mateix).
				gateway 10.10.1.1 --> Ip del router de la xarxa.

				Per la segona interfíce (de manera opcional) també s'ha configurat una Ip fixa amb els següents paràmetres:

				address 192.168.1.120 --> Adreça disponible de la nostra xarxa (amb connexió a internet)
				netmask 255.255.255.0 --> Màscara de xarxa que fa referència a /24
				network 192.168.1.0 --> Identificador de xarxa

				Finalment el fixter de intefícies (/etc/network/interfaces) de la màquina DNS1 ha de quedar així:
			-------------------------------------------------------------------------
				# This file describes the network interfaces available on your system
				# and how to activate them. For more information, see interfaces(5).

				source /etc/network/interfaces.d/*

				# The loopback network interface
				auto lo
				iface lo inet loopback


				iface enp0s3 inet static
				address 10.10.1.3
				netmask 255.255.255.240
				network 10.10.1.0
				dns-nameservers 10.10.1.3
				gateway 10.10.1.1

				auto enp0s8
				iface enp0s8 inet static
				address 192.168.1.120
				netmask 255.255.255.0
				network 192.168.1.0
			-------------------------------------------------------------------------


				També modificarem el fitxer (/etc/resolv.conf) per incloure el servidor DNS (a ell mateix en aquest cas)
				Només farà falta que apareixi aquesta línia:

			-----------------------
				nameserver 10.10.1.3
			-----------------------

		MÀQUINA DNS2

			A aquesta màquina farem exactament el mateix que a l'anterior amb la diferència a les IPs de les dues interfícies i el servidor
			dns.

			Al adaptador 1 (xarxa interna) li assignarem la IP 10.10.1.4, al mateix temps col·locarem el servidor dns amb la mateixa IP, com
			es pot veure al fitxer.

			El fitxer quedarà així:
			-------------------------------------------------------------------------
				# This file describes the network interfaces available on your system
				# and how to activate them. For more information, see interfaces(5).

				source /etc/network/interfaces.d/*

				# The loopback network interface
				auto lo
				iface lo inet loopback

				# The primary network interface
				#allow-hotplug enp0s3
				#iface enp0s3 inet dhcp

				auto enp0s3
				iface enp0s3 inet static
				address 10.10.1.4
				netmask 255.255.255.240
				network 10.10.1.0
				dns-nameservers 10.10.1.4
				gateway 10.10.1.1


				auto enp0s8
				iface enp0s8 inet static
				address 192.168.1.123
				netmask 255.255.255.0
				network 192.168.1.0
				dns-nameservers 10.10.1.4
			-------------------------------------------------------------------------

			També modificarem el fitxer (/etc/resolv.conf) per incloure el servidor DNS (a ell mateix en aquest cas)
			Només farà falta que apareixi aquesta línia:
			-----------------------
				nameserver 10.10.1.4
			-----------------------

			Amb tot modificat farem la comanda (# service networking restart) per aplicar tots els canvis.

		## 4.2.1. INSTAL·LACIÓ DE PAQUETS ##

			Una vegada tenim la configuració de xarxa completada, les actualitzem amb les comandes:
				#apt-get update
				#apt-get upgrade

			Amb tot actualitzat, instal·larem els paquets que necessitarem per la configuració del nostre DNS amb la comanda:

				#apt-get install dnsutils
				- Paquet dnsutils --> Aquest paquet ens instal·la tot el necessàri per poder fer comandes com el dig o nslookup.

				#apt-get install bind9
				- Paquets bind9 --> Ens instal·la un servei de dns el qual, genera una carpeta a /etc/bind on tenim tots els fitxers de
				configuració sobre el nostre dns (fitxers de zona per exemple).

				Les operacions bàsiques que trobarem posteriorment a l'explicació i que podem fer amb el programa bind9 són:
					-	service bind9 stop --> para el servei
					- service bind9 start --> inicia el servei
					- service bind9 restart --> reinicia el servei
					- service bind9 reload --> actualitza els fitxers de zona en cas de haver-hi canvis


			Una vegada instal·lat els paquets necessàris, ja podrem començar a configurar el nostre servei DNS.
			A part, ja podem deshabilitar els adaptadors pont del DNS1 i DNS2.


	#### 4.3. CONFIGURACIÓ DNS ####

		SERVIDOR MASTER

			El servidor DNS master és aquell al que se li fan les peticions de resolució en primera instància. Aquest servidor és el que conté
			la informació completa de les zones del domini i al primer que pregunta qualsevol dels dispositius que vulgui resoldre algun nom o
			adreça ip. En altres paraules, és el servidor dns principal del domini.	
	
		SERVIDOR SLAVE

			El servidor dns slave pràcticament és una còpia del servidor master per en cas de fallada d'aquest, no provocar una caiguda del
			servei de dns de la xarxa. Aquest Servidor, cada vegada que el master ha fet un canvi als fitxers de zona, rep un avís i una
			transferència dels canvis. Per tant, el servidor slave en cas de caiguda del master, podrà resoldre tants noms o ip's com va rebre
			a la última actualització.
			En altres paraules, és un servidor dns de suport o còpia pel master.

		Hem de tenir en compte que un servidor master pot fer d'esclau d'un altre domini, i el passa el mateix amb el servidor slave, com veurem
		en aquesta pràctica, tindrem el domini "seax.edu", on la maquina DNS1 farà de servidor master i la màquina DNS2 de servidor slave. En canvi,
		per al domini "public.edu", el DNS2 serà el nostre servidor master i el DNS1 en aquest cas serà l'slave.

	  	## 4.3.1. CREACIÓ DEL DNS1 ##

			- Obrim la màquina anomenada DNS1

			- Accedim a /etc/bind i modifiquem l'arxiu named.conf.local per crear les zones pels dominis seax.edu i public.edu:

				---------------------------------------------------------------------------
				//
				// Do any local configuration here
				//

				// Consider adding the 1918 zones here, if they are not used in your
				// organization
				//include "/etc/bind/zones.rfc1918";


				zone "seax.edu" IN {
					type master;
					file "/etc/bind/db.seax.edu";
					allow-transfer { 10.10.1.4; }; //Allow Transfer of zone from the master
					also-notify { 10.10.1.4; };
				};

				zone "10.10.in-addr.arpa" IN {
					type master;
					file "/etc/bind/db.10.10";
					allow-transfer { 10.10.1.4; }; //Allow Transfer of zone from the master
					also-notify { 10.10.1.4; };
				};

				#zone public.edu
				zone "public.edu" IN {
					type slave;
					file "/var/cache/bind/db.public.edu";
					masters {10.10.1.4;};
				};

				zone "1.168.192.in-addr.arpa" IN {
					type slave;
					file "/var/cache/bind/db.192.168.1";
					masters {10.10.1.4;};
				};
				---------------------------------------------------------------------------

					Com podem veure, tenim quatre zones:

					MASTER ZONES "seax.edu"

						- seax.edu: És la zona directa amb les quals resoldrem adreces ip a partir de noms de domini. Com es pot veure, permitim la
						comunicació afegit el paràmetre "allow-transfer" amb el dns2 (10.10.1.4) perquè pugui fer les actualitzacions, així com
							avisar-li dels canvis amb el "also-notify".
						Els dispusitius d'aquesta zona es declaren al fitxer "db.seax.edu"

						- 10.10.in-addr.arpa: És la zona inversa amb les quals resoldrem noms a partir de adreces ip. Com es pot veure, permitim la
						comunicació afegit el paràmetre "allow-transfer" amb el dns2 (10.10.1.4) perquè pugui fer les actualitzacions, així com
							avisar-li dels canvis amb el "also-notify".
						Els dispusitius d'aquesta zona es declaren al fitxer "db.10.10"

					SLAVE ZONES "public.edu"

						- public.edu: És la zona directa amb les quals resoldrem adreces ip a partir de noms de domini. En aquest cas la configurarem
						de tipus slave, guardant els fitxer SOA que agafarà del servidor master(DNS2) a "/var/cache/bind/db.public.edu" i col·locarem
						la ip del servidor master del que es slave amb:
							
							masters {10.10.1.4;}; --> En aquest paràmetre posarem separats per ";" tots els masters amb els que treballa el nostre servidor
											escalu, en el nostre cas només té un master a la direcció 10.10.1.4

						- 1.168.192.in-addr.arpa: És la zona inversa amb les quals resoldrem noms a partir de adreces ip. Aquí farem exactament el mateix 
						que en el cas directe del public.edu, però guardant els fitxers a "/var/cache/bind/db.192.168.1".
						

			Ara crearem els fitxers de zona per als dos dominis dels quals la nostra màquina serà master, ja que per els que fa d'slave el nostre
			servidor esclau s'ocuparà d'agafar automàticament els fitxers del servidor master i fins i tot de revisar de manera periódica si ha
			hagut canvis en aquests i ha d'actualitzar-los.

			- Copiem el contingut del fitxer "db.local" al fitxer "db.seax.edu" com a base i l'editem per afegir els dispositius que pertanyen
			  a la zona:

				# cp db.local db.seax.edu
					# nano db.seax.edu

				--------------------------------------------------------
				;
				; BIND data file for local loopback interface
				;
				$TTL	604800
				@	IN	SOA	seax.edu. root.seax.edu. (
								15		; Serial
							604800		; Refresh
							86400		; Retry
							2419200		; Expire
							604800 )	; Negative Cache TTL
				;
				@		IN	NS	dns1.seax.edu.
				dns1		IN	A	10.10.1.3
				raccessDmz	IN	A	10.10.1.1
				raccessAdmin	IN	A	10.10.2.1
				raccessVpn	IN	A	10.10.6.1
				rusuarisDmz	IN	A	10.10.1.2
				ruBackbone	IN	A	10.10.3.1
				ruUsuaris	IN	A	10.10.4.1
				rsAdmin		IN	A	10.10.2.2
				rsBackbone	IN	A	10.10.3.2
				rsServers	IN	A	10.10.5.1
				dns2		IN	A	10.10.1.4
				dhcpServers	IN	A	10.10.5.2
				ssh1		IN	CNAME	dns1.seax.edu.
				ssh2		IN	CNAME	dns2.seax.edu.
				;troncal
				;monitores
				--------------------------------------------------------

					La primera varibale que trobem és $TTL que fa referència a una directiva estandritzada per definir un Time To Live en cas de que
					no s'especifiqui, també trobem:
					- $INCLUDE --> Ens permet incloure el les linies del fitxer definit.
					- $ORIGIN --> Defineix el base name o label que serà utilitzat per substitucions de nom no qualificades.

					Seguit d'aquesta varibale trobem el primer RR de tipus SOA, on nosaltres col·locarem el nom del host del servidor de noms que té autoritat per el domini seax.edu, l'altre nom és simplement el nom que pertany a un RR MX de correu electrònic que pertany en aquest cas a l'usuari root per posar-nos en contacte amb ell en cas de necessitat (actualment no existeix el registre MX comentat abans, es només per explicar la directiva). Finalment assignarem diversos paràmetres que s'aplicaràn a la zona.

					Els paràmetres els deixarem per defecte, cadascún d'aquest fa referència a:

					- Serial --> Varibale que hem d'actualitzar sempre que es fagi una modificació a algun dels RR del fitxer de zona.
					- Refresh --> Indica el temps que trigarà el servidor slave a mirar si hi ha hagut modificacions al master.
					- Retry --> Defineix el temps que trigarà el servidor slave a tornar a contactar amb el master en el cas que no hagi pogut.
					- Expire --> Indica quan la informació del servidor Slave deixa de ser autoritativa (no és l'informació més actualitzada).
					- Negative Cache TTL --> Indica el temps de vida que tenen les respostes negatives guardades.
					NOTA: Valors de temps en segons.

					Com podem veure tenim RR (Resource Records) de diferents tipus:
						- NS(nameserver): on hem posat dns.seax.edu
						- A (address): on afegim tots els dispositius de la nostra xarxa amb un nom per identificar-los i la seva adreça ip.
						- CNAME (canonical name): hem creat un alias pel nom canònic "dns.seax.edu" anomenat dns1. D'aquesta manera podrem resoldre
						el mateix fent dig "dns1.seax.edu" que fent "dig dns.seax.edu".
						Aquest fitxer és el que ens permet obtenir les ip's de dispositius del domini a partir del seu nom.

					Dintre dels RR tenim molt més tipus, els més importants són:
					- SOA: Defineix el nom de la zona, email de contacte i diversos valors que quedaràn aplicats a la zona.
					- NS: Nom del servidor dns
					- A: Adreça de tipus IPv4
					- AAAA: Adreça de tipus IPv6
					- CNAME: Nom canónic del servidor o alias
					- MX: Adreça de correu
					- PTR: Adreça cap a nom, utilitzat a la configuració de zona Inversa


			- Copiem el contingut del fitxer db.local al fitxer db.10.10 com a base i l'editem:
				# cp db.local db.10.10
					# nano db.10.10

				--------------------------------------------------------
				;
				; BIND data file for local loopback interface
				;
				$TTL	604800
				@	IN	SOA	seax.edu. root.seax.edu. (
								10		; Serial
							604800		; Refresh
							86400		; Retry
							2419200		; Expire
							604800 )	; Negative Cache TTL
				;
				@	IN	NS	dns1.seax.edu.
				3.1	IN	PTR	dns1.seax.edu.
				1.1	IN	PTR	raccessDmz.seax.edu.
				2.1	IN	PTR	rusuarisDmz.seax.edu.
				4.1	IN	PTR	dns2.seax.edu.
				1.2	IN	PTR	raccessAdmin.seax.edu.
				2.2	IN	PTR	rsAdmin.seax.edu.
				2.3	IN	PTR	rsBackbone.seax.edu.
				1.4	IN	PTR	ruUsuaris.seax.edu.
				2.5	IN	PTR	dhcpServers.seax.edu.
				1.5	IN	PTR	rsServers.seax.edu.
				1.6	IN	PTR	raccessVpn.seax.edu.
				1.3	IN	PTR	ruBackbone.seax.edu.
				1.4	IN	PTR	ruUsuaris.seax.edu.
				;troncal
				;monitores
				--------------------------------------------------------

				Com podem veure tenim RR de diferents tipus:
					- NS(nameserver): on hem posat dns.seax.edu
					- PTR (address): on afegim tots els dispositius de la nostra xarxa amb els 16 bits de menys pes de la seva adreça ip per
					identificar-los i el seu nom.
					Els RR de tipus PTR no són res més que un punter al digits posats a la zona en qüestió. Per exemple, en aquest cas
					"zone 10.10.in-addr.arpa". Per tant, per que funcioni la ressolució, quan declarem un dispositiu al fitxer db.10.10 en aquest
					cas, cal inidicar els 16 primers digits de la ip que li correspon així com el nom.

				- Modifiquem el fitxer de configuració /etc/bind/name.conf.options per tal de limitar les peticions recursives a dispositius que
				pertanyen la les nostres xarxes del domini:

				-----------------------------------------------------------------------------------
					acl "trusted" {
					10.10.1.0/28;
					10.10.2.0/28;
					10.10.3.0/30;
					10.10.4.0/28;
					10.10.5.0/28;
					10.10.6.0/28;
					};

					options {
					directory "/var/cache/bind";

					//Activem la recursivitat
					recursion yes;
					//recursivitat només per xarxes de confiança
					allow-recursion { trusted; };
					//allow-query { any; };
					// If there is a firewall between you and nameservers you want
					// to talk to, you may need to fix the firewall to allow multiple
					// ports to talk.  See http://www.kb.cert.org/vuls/id/800113

					// If your ISP provided one or more IP addresses for stable
					// nameservers, you probably want to use them as forwarders.
					// Uncomment the following block, and insert the addresses replacing
					// the all-0's placeholder.

					//forwarders {
					// 0.0.0.0;
					//	8.8.8.8;
					//	8.8.4.4;
					//};

					//========================================================================
					// If BIND logs error messages about the root key being expired,
					// you will need to update your keys.  See https://www.isc.org/bind-keys
					//========================================================================
					dnssec-validation auto;

					listen-on-v6 { any; };
					};
				-----------------------------------------------------------------------------------

					Com podem veure, tenim una llista d'accés amb el conjunt d'adreces de xarxa que pertanyen a les nostres xarxes internes. Aquesta
					llista d'accés l'anomenem "trusted" o zona de confiança. Una vegada creada, a l'apartat options, hem declarat que permetem la
					recursivitat amb la línia "recursion yes" tot i què realment la limitació de la recursivitat és fa amb a línia
					"allow-recursion { trusted; };", ja que indica que només permet la recursivitat per adreces que estiguin dintre de les xarxes
					declarades a la llista d'accés "trusted".

			- Obrim en mode edició el fitxer /etc/resolv.conf

				# nano /etc/resolv.conf

				Editem el nameserver per la ip del servidor dns master: 10.10.1.3
				Guardem i sortim

			- Reiniciem el servei bind9:

				# service bind9 restart

					IMPORTANT: Cal comentar, que cada vegada que es faci una modificació al fitxer db.seax.edu o al db.10.10 és necessari incrementar el valor del "serial" de forma aleatòria.
					Això ens permet que quan fem un "service bind9 reload" s'actualitzin únicament els fitxers relacionats amb les zones a més de
					notificar al slave dels canvis i fer-li la transferència d'aquests canvis.


		## 4.3.2. CREACIÓ DEL DNS2 ##

			- Obrim la màquina anomenada DNS2

			- Accedim a /etc/bind i modifiquem l'arxiu named.conf.local per crear les zones:
			-----------------------------------------------------------------------------------
			//
			// Do any local configuration here
			//

			// Consider adding the 1918 zones here, if they are not used in your
			// organization
			//include "/etc/bind/zones.rfc1918";


			zone "seax.edu" IN {
				type slave;
				file "/var/cache/bind/db.seax.edu";
				masters {10.10.1.3;};
			};

			//FALTA la cerca inversa
			zone "10.10.in-addr.arpa" IN {
				type slave;
				file "/var/cache/bind/db.10.10";
				masters {10.10.1.3;};
			};

			#zone public
			zone "public.edu" IN {
				type master;
				file "/etc/bind/db.public.edu";
				allow-transfer {10.10.1.3; };
				also-notify {10.10.1.3; };
			};

			zone "1.168.192.in-addr.arpa"{
				type master;
				file "/etc/bind/db.192.168.1";
				allow-transfer {10.10.1.3; };
				also-notify {10.10.1.3; };
			};
			-----------------------------------------------------------------------------------

				Com podem veure, tenim quatre zones:

				MASTER ZONES "public.edu"

					- public.edu: És la zona directa amb les quals resoldrem adreces ip a partir de noms de domini. Com es pot veure, permitim la
					comunicació afegit el paràmetre "allow-transfer" amb el dns1 (10.10.1.3) perquè pugui fer les actualitzacions, així com
						avisar-li dels canvis amb el "also-notify".
					Els dispusitius d'aquesta zona es declaren al fitxer "db.public.edu"

					- 1.168.192.in-addr.arpa: És la zona inversa amb les quals resoldrem noms a partir de adreces ip. Com es pot veure, permitim la
					comunicació afegit el paràmetre "allow-transfer" amb el dns1 (10.10.1.3) perquè pugui fer les actualitzacions, així com
						avisar-li dels canvis amb el "also-notify".
					Els dispusitius d'aquesta zona es declaren al fitxer "db.192.168.1"

				SLAVE ZONES "seax.edu"

					- seax.edu: És la zona directa amb les quals resoldrem adreces ip a partir de noms de domini. En aquest cas la configurarem
					de tipus slave, guardant els fitxer SOA que agafarà del servidor master(DNS1) a "/var/cache/bind/db.seax.edu" i col·locarem
					la ip del servidor master del que es slave amb:
					
					masters {10.10.1.3;}; --> En aquest paràmetre posarem separats per ";" tots els masters amb els que treballa el nostre servidor
					escalu, en el nostre cas només té un master a la direcció 10.10.1.3

					- 10.10.in-addr.arpa: És la zona inversa amb les quals resoldrem noms a partir de adreces ip. Aquí farem exactament el mateix 
					que en el cas directe del seax.edu, però guardant els fitxers a "/var/cache/bind/db.10.10".


			Una vegada acabem la configuració del fitxer "/etc/bind/named.conf.local" només fara falta crear els arxius de zona pel domini public.edu
			i la seva inversa 1.168.192.in-addr.arpa, ja que el nostre servidor esclau s'ocuparà d'agafar automàticament els fitxers del servidor master 
			i fins i tot de revisar de manera periódica si ha hagut canvis en aquests i ha d'actualitzar-los.

			Per a que funcionin aquestes actualitzacions, el servidor es basa en el valor Serial del fitxer de configuració SOA, per tant tornem
			a recordar que és important actualitzar aquest valor sempre que fem una modificació al master.

			- Creació fitxers de zona dominis public.edu i inversa 1.168.192.in-addr.arpa: 

			----------- db.public.edu -----------

				;
				; BIND data file for local loopback interface
				;
				$TTL	604800
				@	IN	SOA	public.edu. root.public.edu. (
								25		; Serial
							604800		; Refresh
							86400		; Retry
							2419200		; Expire
							604800 )	; Negative Cache TTL
				;
				@	IN	NS	dns2.public.edu.
				dns1	IN	A	192.168.1.125
				dns2	IN	A	192.168.1.125
				ssh1	IN	CNAME	dns1.public.edu.
				ssh2	IN	CNAME	dns2.public.edu.

			--------------------------------------

			----------- db.192.168.1 -------------

			;
			; BIND reverse data file for local loopback interface
			;
			$TTL	604800
			@	IN	SOA	public.edu. root.public.edu. (
							3		; Serial
						604800		; Refresh
						86400		; Retry
						2419200		; Expire
						604800 )	; Negative Cache TTL
			;
			@	IN	NS	dns2.public.edu.
			125	IN	PTR	dns2.public.edu.
			125	IN	PTR	dns1.public.edu.

			--------------------------------------

			Per finalitzar i desar els canvis farem un:

			# service bind9 restart

			Amb el nostres servidors MASTER i ESCLAU actius i funcionant, podrem anar a la ruta "/var/cache/bind" i hauriem de trobar els
			fitxers de configuració de zona del nostre servidor master.

			Fent la comanda ls al directori vurem els fitxers de zona entre altres:
			- db.10.10
			- db.seax.edu

			NOTA: Recorda que no podràs fer cap modificació ja que estàn codificats.
















--------------------------------------------------- BORRADOR COSICAS ---------------------------------------------------

APUNTES PREVIOS
	
	interface servidors
		backbone --> usuaris
		backbone --> dmz
		admin --> xarxa troncal
		admin --> xarxa vpn

	interface admin
		usuaris
		dmz
		troncal
		vpn

	interface backbone


------------------
	xarxa backbone --> xarxa usuaris
	xarxa backbone --> xarxa dmz
	xarxa admin --> xarxa troncal
	xarxa admin --> xarxa vpn

ROUTER USUARIS

ROUTER

--> configurado los interfaces
--> añadimos las rutas

ACTIVAR FORWARDING

--> modificamos el fichero y le asignamos al variable 1:
/etc/sysctl.conf:
net.ipv4.ip_forward = 1

--> reiniciamos con la comanda:

# sysctl -p /etc/sysctl.conf

o

# /etc/init.d/procps.sh restart


DUDAS

Como redireccionamos a internet
porque cada ruter tiene su propio nat
como hacer la redireciona a la troncal si es dinamica
falla enp0s10
escenario pensado es correcto

xarxa acces tiene que tener dos caminos?


####### 2. CONFIGURACION DE DHCP CON ROUTERS #######

Asignamos solo la interficie a la red de servidores

Ip 10.0.5.2
MAC: 08:00:27:10:05:02

https://bytelearning.blogspot.com/2016/08/como-crear-un-dhcp-relay-en-linux.html

DHCP RELAY EN LOS ROUTERS (admin i usuaris)

3 PASOS (por router)
Ip del server dhcp server
Interfaces → todas las inteficies de las que queremos escuchar peticiones dhcp para luego redirigirlas a nuestro servidor dhcp (enp0s3, enp0s8, enp0s9).
Parameter -D : para que se ejecute en segundo plano

Fichero de conf:  /etc/default/isc-dhcp-relay

MOCK UP SERVER DHCP

- Modificado el fichero de configración del isc-dhcp-server, para asingar solo la interfaz enp0s3 al servidor dhcp
- Creación de todas las pools para todas las redes.
- Cambiado los rangos para encajar con lo que necesitamos
- Añadido un usuario para cada subred que tendra una ip reservada (x.y.z.11) para cada una de las redes cuando ese tenga la mac ..

COSAS POR HACER
Como crear dos rangos en una misma pool
Añadir un host reservado con la Ip x.y.z.11 para cada una de las redes de nuestro sistema.


CONLUSIÓN LUNES FASE 2
--> Hemos instalado el realy en los routers usuaris i  servidor
--> Hemos hecho funcional dhcp para toda la red, añadiendo la ip reservada de la maquina monitor
