Informe pràctica 4 - Benavente Daniel - Palacios Javier

- Fitxers involucrats:
	p4_Benavente_Daniel_Palacios_Javier.txt

	- Descripció: Aquesta primera sessió de la pràctica, consisteix en crear un dns master i un de slave amb l'objectiu de resoldre
	tant noms de domini com direccions inverses (ip a domini). El domini tractat a aquesta sessió és seax.edu, el qual es divideixi en
	diferents subxarxes on els dispusitius de les quals, han de poder ser resolts tant de forma directa com inversa pels dns creats.
	A més a més, els servidors dns han de poder resoldre peticions externes al domini i permetre només peticions recursives
	dintre de les xarxes privades.

ÍNDEX

	1. MODIFICAIONS PREVIES VIRTUALBOX
	2. CONFIGURACIONS PREVIES DE LES MÀQUINES
		 2.1. INSTAL·LACIÓ DE PAQUETS
	3. CONFIGURACIÓ DNS
		 3.1. CREACIÓ DEL DNS MASTER (dns1)
		 3.2. CREACIÓ DEL DNS SLAVE (dns2)
	4. PROVES DE VALIDACIÓ
		 4.1. PROVES DE VALIDACIÓ DNS MASTER (dns1)
		 4.2. PROVES DE VALIDACIÓ DNS SLAVE (dns2)

####### 1. MODIFICACIONS PREVIES VIRTUALBOX #######

	Primer creem dues maquines virtuals anomenades DNS1 i DNS2 amb el sistema operatiu debian 10 (sense interfície gràfica), per a cada
	màquina farem el següent:

	DNS1:
		Anirem a la configuració de la màquina, i a l'apartat de Xarxa activem (si no hi està ja) un Adaptador de xarxa en mode Xarxa
		interna i un segon adaptador de xarxa en mode Adaptador Pont. Dels paràmetres Avanaçats per el primer adaptador modificarem la
		direcció MAc per "08:00:27:10:01:03" i li posarem el nom de "xarxa-dmz" al nom de la nostra xarxa, en canvi, per el segon no ens
		fara falta modificar res.

		Resum configuració:
			Nom màquina: DNS1
			SO: Debian 10 (Buster / sense intefície gràfica)
			Adaptador 1: Adaptador de xarxa de tipus interna
									 MAC: 08:00:27:10:01:03
			Adaptador 2: Adaptador de xarxa de tipus Adaptador Pont

	DN2:
		Per aquesta segona màquina seguirem el mateix procès que la primera amb la diferència de la Mac que assignarem al primer Adaptador
		(xarxa interna) serà "08:00:27:10:01:04".
			Resum configuració:
				Nom màquina: DNS2
				SO: Debian 10 (Buster / sense intefície gràfica)
				Adaptador 1: Adaptador de xarxa de tipus interna
										 MAC: 08:00:27:10:01:04
				Adaptador 2: Adaptador de xarxa de tipus Adaptador Pont

	IMPORTANT: En aquest procès i per evitar possibles errors, s'han configurat IP's fixes de la xarxa a la que es troba connectada les
	màquines DNS1 i DNS2 (tot i que pot funcionar amb la IP donada per el servidor DHCP que hi hagi configurat a la nostra xarxa).


####### 2. CONFIGURACIONS PREVIES DE LES MÀQUINES #######

	Amb tota la configuració prèvia de VirutalBox finalitzada, encenem les màquines i tornem a entrar com a root per configurar les
	direccions IP estàtiques de les nostres interfícies al fitxer (/etc/network/interfaces):

	MÀQUINA DNS1
		Començarem modificant l'interfíce de la xarxa interna, amb el nom en aquest cas "enp0s3", seguint els següents paràmetres:

			Primer de tot col·locarem com a estàtica la intefície amb "iface enp0s3 inet static", després, com voldrem configurar la xarxa
			10.10.1.0/28, els paràmetres seràn:

			address 10.10.1.3 --> adreça fixa del nostre servidor Master
			netmask 255.255.255.240 --> Màscara de xarxa que fa referència a /28
			network 10.10.1.0 --> Identificador de xarxa
			dns-nameservers 10.10.1.3 --> Ip del Servidor DNS (en aquest cas s'està refernciant a ell mateix).
			gateway 10.10.1.1 --> Ip del router de la xarxa.

			Per la segona interfíce (de manera opcional) també s'ha configurat una Ip fixa amb els següents paràmetres:

			address 192.168.1.120 --> Adreça disponible de la nostra xarxa (amb connexió a internet)
			netmask 255.255.255.0 --> Màscara de xarxa que fa referència a /24
			network 192.168.1.0 --> Identificador de xarxa

			Finalment el fixter de intefícies (/etc/network/interfaces) de la màquina DNS1 ha de quedar així:
		-------------------------------------------------------------------------
			# This file describes the network interfaces available on your system
			# and how to activate them. For more information, see interfaces(5).

			source /etc/network/interfaces.d/*

			# The loopback network interface
			auto lo
			iface lo inet loopback


			iface enp0s3 inet static
			address 10.10.1.3
			netmask 255.255.255.240
			network 10.10.1.0
			dns-nameservers 10.10.1.3
			gateway 10.10.1.1

			auto enp0s8
			iface enp0s8 inet static
			address 192.168.1.120
			netmask 255.255.255.0
			network 192.168.1.0
		-------------------------------------------------------------------------


			També modificarem el fitxer (/etc/resolv.conf) per incloure el servidor DNS (a ell mateix en aquest cas)
			Només farà falta que apareixi aquesta línia:

		-----------------------
			nameserver 10.10.1.3
		-----------------------

	MÀQUINA DNS2

		A aquesta màquina farem exactament el mateix que a l'anterior amb la diferència a les IPs de les dues interfícies i el servidor
		dns.

		Al adaptador 1 (xarxa interna) li assignarem la IP 10.10.1.4, al mateix temps col·locarem el servidor dns amb la mateixa IP, com
		es pot veure al fitxer.

		El fitxer quedarà així:
		-------------------------------------------------------------------------
			# This file describes the network interfaces available on your system
			# and how to activate them. For more information, see interfaces(5).

			source /etc/network/interfaces.d/*

			# The loopback network interface
			auto lo
			iface lo inet loopback

			# The primary network interface
			#allow-hotplug enp0s3
			#iface enp0s3 inet dhcp

			auto enp0s3
			iface enp0s3 inet static
			address 10.10.1.4
			netmask 255.255.255.240
			network 10.10.1.0
			dns-nameservers 10.10.1.4
			gateway 10.10.1.1


			auto enp0s8
			iface enp0s8 inet static
			address 192.168.1.123
			netmask 255.255.255.0
			network 192.168.1.0
			dns-nameservers 10.10.1.4
		-------------------------------------------------------------------------

		També modificarem el fitxer (/etc/resolv.conf) per incloure el servidor DNS (a ell mateix en aquest cas)
		Només farà falta que apareixi aquesta línia:
		-----------------------
			nameserver 10.10.1.4
		-----------------------

		Amb tot modificat farem la comanda (# service networking restart) per aplicar tots els canvis.

	#### 2.1. INSTAL·LACIÓ DE PAQUETS ####

		Una vegada tenim la configuració de xarxa completada, les actualitzem amb les comandes:
			#apt-get update
			#apt-get upgrade

		Amb tot actualitzat, instal·larem els paquets que necessitarem per la configuració del nostre DNS amb la comanda:

			#apt-get install dnsutils
			- Paquet dnsutils --> Aquest paquet ens instal·la tot el necessàri per poder fer comandes com el dig o nslookup.

			#apt-get install bind9
			- Paquets bind9 --> Ens instal·la un servei de dns el qual, genera una carpeta a /etc/bind on tenim tots els fitxers de
			  configuració sobre el nostre dns (fitxers de zona per exemple).

			Les operacions bàsiques que trobarem posteriorment a l'explicació i que podem fer amb el programa bind9 són:
				-	service bind9 stop --> para el servei
				- service bind9 start --> inicia el servei
				- service bind9 restart --> reinicia el servei
				- service bind9 reload --> actualitza els fitxers de zona en cas de haver-hi canvis


		Una vegada instal·lat els paquets necessàris, ja podrem començar a configurar el nostre servei DNS.


####### 3. CONFIGURACIÓ DNS #######

	#### 3.1. CREACIÓ DEL DNS MASTER (dns1) ####

		El servidor DNS master és aquell al que se li fan les peticions de resolució en primera instància. Aquest servidor és el que conté
		la informació completa de les zones del domini i al primer que pregunta qualsevol dels dispositius que vulgui resoldre algun nom o
		adreça ip. En altres paraules, és el servidor dns principal del domini.

	  - Obrim la màquina anomenada DNS1

	  - Accedim a /etc/bind i modifiquem l'arxiu named.conf.local per crear les zones:

		---------------------------------------------------------------------------
			//
			// Do any local configuration here
			//

			// Consider adding the 1918 zones here, if they are not used in your
			// organization
			//include "/etc/bind/zones.rfc1918";


			zone "seax.edu" IN {
			type master;
			file "/etc/bind/db.seax.edu";
			allow-transfer { 10.10.1.4; }; //Allow Transfer of zone from the master
			also-notify { 10.10.1.4; };
			};

			//FALTA la cerca inversa
			zone "10.10.in-addr.arpa" IN {
			type master;
			file "/etc/bind/db.10.10";
			allow-transfer { 10.10.1.4; }; //Allow Transfer of zone from the master
			also-notify { 10.10.1.4; };
			};
		---------------------------------------------------------------------------


			Com podem veure, tenim dos zones:

				- seax.edu: És la zona directa amb les quals resoldrem adreces ip a partir de noms de domini. Com es pot veure, permitim la
				  comunicació afegit el paràmetre "allow-transfer" amb el dns2 (10.10.1.4) perquè pugui fer les actualitzacions, així com
					avisar-li dels canvis amb el "also-notify".
				  Els dispusitius d'aquesta zona es declaren al fitxer "db.seax.edu"

				- 10.10.in-addr.arpa: És la zona inversa amb les quals resoldrem noms a partir de adreces ip. Com es pot veure, permitim la
				  comunicació afegit el paràmetre "allow-transfer" amb el dns2 (10.10.1.4) perquè pugui fer les actualitzacions, així com
					avisar-li dels canvis amb el "also-notify".
	 			  Els dispusitius d'aquesta zona es declaren al fitxer "db.10.10"

	  - Copiem el contingut del fitxer "db.local" al fitxer "db.seax.edu" com a base i l'editem per afegir els dispositius que pertanyen
		  a la zona:

	    # cp db.local db.seax.edu
			# nano db.seax.edu

		--------------------------------------------------------
			;
			; BIND data file for local loopback interface
			;
			$TTL	604800
			@	IN	SOA	seax.edu. root.seax.edu. (
						     10		; Serial
						 604800		; Refresh
						  86400		; Retry
						2419200		; Expire
						 604800 )	; Negative Cache TTL
			;
			@		IN	NS	dns.seax.edu.
			dns		IN	A	10.10.1.3
			raccessDmz	IN	A	10.10.1.1
			raccessAdmin	IN	A	10.10.2.1
			raccessVpn	IN	A	10.10.6.1
			rusuarisDmz	IN	A	10.10.1.2
			ruBackbone	IN	A	10.10.3.1
			ruUsuaris	IN	A	10.10.4.1
			rsAdmin		IN	A	10.10.2.2
			rsBackbone	IN	A	10.10.3.2
			rsServers	IN	A	10.10.5.1
			dns2		IN	A	10.10.1.4
			dhcpServers	IN	A	10.10.5.2
			dns1		IN	CNAME	dns.seax.edu.
			;troncal
			;monitores
		--------------------------------------------------------

			La primera varibale que trobem és $TTL que fa referència a una directiva estandritzada per definir un Time To Live en cas de que
			no s'especifiqui, també trobem:
			 - $INCLUDE --> Ens permet incloure el les linies del fitxer definit.
			 - $ORIGIN --> Defineix el base name o label que serà utilitzat per substitucions de nom no qualificades.

			Seguit d'aquesta varibale trobem el primer RR de tipus SOA, on nosaltres col·locarem el nom del host del servidor de noms que té autoritat per el domini seax.edu, l'altre nom és simplement el nom que pertany a un RR MX de correu electrònic que pertany en aquest cas a l'usuari root per posar-nos en contacte amb ell en cas de necessitat (actualment no existeix el registre MX comentat abans, es només per explicar la directiva). Finalment assignarem diversos paràmetres que s'aplicaràn a la zona.

			Els paràmetres els deixarem per defecte, cadascún d'aquest fa referència a:

			- Serial --> Varibale que hem d'actualitzar sempre que es fagi una modificació a algun dels RR del fitxer de zona.
			- Refresh --> Indica el temps que trigarà el servidor slave a mirar si hi ha hagut modificacions al master.
			- Retry --> Defineix el temps que trigarà el servidor slave a tornar a contactar amb el master en el cas que no hagi pogut.
			- Expire --> Indica quan la informació del servidor Slave deixa de ser autoritativa (no és l'informació més actualitzada).
			- Negative Cache TTL --> Indica el temps de vida que tenen les respostes negatives guardades.
			NOTA: Valors de temps en segons.

			Com podem veure tenim RR (Resource Records) de diferents tipus:
				- NS(nameserver): on hem posat dns.seax.edu
				- A (address): on afegim tots els dispositius de la nostra xarxa amb un nom per identificar-los i la seva adreça ip.
				- CNAME (canonical name): hem creat un alias pel nom canònic "dns.seax.edu" anomenat dns1. D'aquesta manera podrem resoldre
				  el mateix fent dig "dns1.seax.edu" que fent "dig dns.seax.edu".
				Aquest fitxer és el que ens permet obtenir les ip's de dispositius del domini a partir del seu nom.

			 Dintre dels RR tenim molt més tipus, els més importants són:
			 - SOA: Defineix el nom de la zona, email de contacte i diversos valors que quedaràn aplicats a la zona.
			 - NS: Nom del servidor dns
			 - A: Adreça de tipus IPv4
			 - AAAA: Adreça de tipus IPv6
			 - CNAME: Nom canónic del servidor o alias
			 - MX: Adreça de correu
			 - PTR: Adreça cap a nom, utilitzat a la configuració de zona Inversa


	  - Copiem el contingut del fitxer db.local al fitxer db.10.10 com a base i l'editem:
	    # cp db.local db.10.10
			# nano db.10.10

		--------------------------------------------------------
			;
			; BIND data file for local loopback interface
			;
			$TTL	604800
			@	IN	SOA	seax.edu. root.seax.edu. (
						      5		; Serial
						 604800		; Refresh
						  86400		; Retry
						2419200		; Expire
						 604800 )	; Negative Cache TTL
			;
			@	IN	NS	dns.seax.edu.
			3.1	IN	PTR	dns.seax.edu.
			1.1	IN	PTR	raccessDmz.seax.edu.
			2.1	IN	PTR	rusuarisDmz.seax.edu.
			4.1	IN	PTR	dns2.seax.edu.
			1.2	IN	PTR	raccessAdmin.seax.edu.
			2.2	IN	PTR	rsAdmin.seax.edu.
			2.3	IN	PTR	rsBackbone.seax.edu.
			1.4	IN	PTR	ruUsuaris.seax.edu.
			2.5	IN	PTR	dhcpServers.seax.edu.
			1.5	IN	PTR	rsServers.seax.edu.
			1.6	IN	PTR	raccessVpn.seax.edu.
			1.3	IN	PTR	ruBackbone.seax.edu.
			1.4	IN	PTR	ruUsuaris.seax.edu.
			;troncal
			;monitores
		--------------------------------------------------------

		Com podem veure tenim RR de diferents tipus:
			- NS(nameserver): on hem posat dns.seax.edu
			- PTR (address): on afegim tots els dispositius de la nostra xarxa amb els 16 bits de menys pes de la seva adreça ip per
			 identificar-los i el seu nom.
			Els RR de tipus PTR no són res més que un punter al digits posats a la zona en qüestió. Per exemple, en aquest cas
			"zone 10.10.in-addr.arpa". Per tant, per que funcioni la ressolució, quan declarem un dispositiu al fitxer db.10.10 en aquest
			cas, cal inidicar els 16 primers digits de la ip que li correspon així com el nom.

		- Modifiquem el fitxer de configuració /etc/bind/name.conf.options per tal de limitar les peticions recursives a dispositius que
		  pertanyen la les nostres xarxes del domini:

		-----------------------------------------------------------------------------------
			acl "trusted" {
			 10.10.1.0/28;
			 10.10.2.0/28;
			 10.10.3.0/30;
			 10.10.4.0/28;
			 10.10.5.0/28;
			 10.10.6.0/28;
			};

			options {
			 directory "/var/cache/bind";

			 //Activem la recursivitat
			 recursion yes;
			 //recursivitat només per xarxes de confiança
			 allow-recursion { trusted; };
			 //allow-query { any; };
			 // If there is a firewall between you and nameservers you want
			 // to talk to, you may need to fix the firewall to allow multiple
			 // ports to talk.  See http://www.kb.cert.org/vuls/id/800113

			 // If your ISP provided one or more IP addresses for stable
			 // nameservers, you probably want to use them as forwarders.
			 // Uncomment the following block, and insert the addresses replacing
			 // the all-0's placeholder.

			 //forwarders {
			 // 0.0.0.0;
			 //	8.8.8.8;
			 //	8.8.4.4;
			 //};

			 //========================================================================
			 // If BIND logs error messages about the root key being expired,
			 // you will need to update your keys.  See https://www.isc.org/bind-keys
			 //========================================================================
			 dnssec-validation auto;

			 listen-on-v6 { any; };
			};
		-----------------------------------------------------------------------------------

			Com podem veure, tenim una llista d'accés amb el conjunt d'adreces de xarxa que pertanyen a les nostres xarxes internes. Aquesta
			llista d'accés l'anomenem "trusted" o zona de confiança. Una vegada creada, a l'apartat options, hem declarat que permetem la
			recursivitat amb la línia "recursion yes" tot i què realment la limitació de la recursivitat és fa amb a línia
			"allow-recursion { trusted; };", ja que indica que només permet la recursivitat per adreces que estiguin dintre de les xarxes
			declarades a la llista d'accés "trusted".

	  - Obrim en mode edició el fitxer /etc/resolv.conf

		  # nano /etc/resolv.conf

	    Editem el nameserver per la ip del servidor dns master: 10.10.1.3
	    Guardem i sortim

	  - Reiniciem el servei bind9:

	    # service bind9 restart

			IMPORTANT: Cal comentar, que cada vegada que es faci una modificació al fitxer db.seax.edu o al db.10.10 és necessari incrementar el valor del "serial" de forma aleatòria.
			Això ens permet que quan fem un "service bind9 reload" s'actualitzin únicament els fitxers relacionats amb les zones a més de
			notificar al slave dels canvis i fer-li la transferència d'aquests canvis.


	#### 3.2. CREACIÓ DEL DNS SLAVE (dns2) ####

		El servidor dns slave pràcticament és una còpia del servidor master per en cas de fallada d'aquest, no provocar una caiguda del
		servei de dns de la xarxa. Aquest Servidor, cada vegada que el master ha fet un canvi als fitxers de zona, rep un avís i una
		transferència dels canvis. Per tant, el servidor slave en cas de caiguda del master, podrà resoldre tants noms o ip's com va rebre
		a la última actualització.
		En altres paraules, és un servidor dns de suport o còpia pel master.

		- Obrim la màquina anomenada DNS2

		- Accedim a /etc/bind i modifiquem l'arxiu named.conf.local per crear les zones:
		-----------------------------------------------------------------------------------
			//
			// Do any local configuration here
			//

			// Consider adding the 1918 zones here, if they are not used in your
			// organization
			//include "/etc/bind/zones.rfc1918";


			zone "seax.edu" IN {
				type slave;
				file "/var/cache/bind/db.seax.edu";
				masters {10.10.1.3;};
			};

			//FALTA la cerca inversa
			zone "10.10.in-addr.arpa" IN {
				type slave;
				file "/var/cache/bind/db.10.10";
				masters {10.10.1.3;};
			};
		-----------------------------------------------------------------------------------

			Com ja hem vist al cas del master, crearem exactament les mateixes zones, però amb diverses modificacións:

			Primer modificarem el tipus perqué les dues zones siguin "slave", també guardarem els fitxers de zona a la direcció
			"/var/cache/bind/db.seax.edu" per el cas de la zona principal, i a "/var/cache/bind/db.seax.edu" per al fitxer de la zona inversa.

			Finalment, col·locarem el master (o masters) del qual el nostre servidor slave serà esclau i d'on agafarà els fitxers, això ho
			farem amb:

			masters {10.10.1.3;}; --> En aquest paràmetre posarem separats per ";" tots els masters amb els que treballa el nostre servidor
									  escalu, en el nostre cas només té un master a la direcció 10.10.1.3 .


		Una vegada acabem la configuració del fitxer "/etc/bind/named.conf.local" no fara falta crear cap arxiu de zona, sino que el nostre
		servidor esclau s'ocuparà d'agafar automàticament els fitxers del servidor master i fins i tot de revisar de manera periódica si ha
		hagut canvis en aquests i ha d'actualitzar-los.

		Per a que funcionin aquestes actualitzacions, el servidor es basa en el valor Serial del fitxer de configuració SOA, per tant tornem
		a recordar que és important actualitzar aquest valor sempre que fem una modificació al master.

		Per finalitzar i desar els canvis farem un:

		# service bind9 restart

		Amb el nostres servidors MASTER i ESCLAU actius i funcionant, podrem anar a la ruta "/var/cache/bind" i hauriem de trobar els
		fitxers de configuració de zona del nostre servidor master.

		Fent la comanda ls al directori vurem els fitxers de zona entre altres:
		- db.10.10
		- db.seax.edu

		NOTA: Recorda que no podràs fer cap modificació ja que estàn codificats.


####### 4. PROVES DE VALIDACIÓ #######

	#### 4.1. PROVES DE VALIDACIÓ DNS MASTER (dns1) ####

		Totes les porves de validació de resolució, les he fet a partir de la comanda dig.
		En cas de resoldre ip's a partir del nom fem "dig nom", en canvi, per resoldre noms a partir de ip's fem "dig -x ip"
		Farem un exemple amb la resolució de la ip del servidor dns autoritatiu del domini a partir del seu nom (resolució directa), i ja aprofitarem per explicar el que retorna.
		NOTA: La captura es realitza des del servidor master (dns.seax.edu --> 10.10.1.3):

		dig dns.seax.edu

			; <<>> DiG 9.11.5-P4-5.1-Debian <<>> dns.seax.edu
			;; global options: +cmd
			;; Got answer:
			;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 35910
			;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 1

			;; OPT PSEUDOSECTION:
			; EDNS: version: 0, flags:; udp: 4096
			; COOKIE: 72dd08516d8dcb2101c9a59e5eba87ed5c85d54d7f9c5949 (good)
			;; QUESTION SECTION:
			;dns.seax.edu.			IN	A

			;; ANSWER SECTION:
			dns.seax.edu.		604800	IN	A	10.10.1.3

			;; AUTHORITY SECTION:
			seax.edu.		604800	IN	NS	dns.seax.edu.

			;; Query time: 0 msec
			;; SERVER: 10.10.1.3#53(10.10.1.3)
			;; WHEN: mar may 12 13:26:37 CEST 2020
			;; MSG SIZE  rcvd: 99


		- Resolució de noms a partir a partir del fitxer de zones directes(db.seax.edu):

			dig dns1.seax.edu (Alies):

				; <<>> DiG 9.11.5-P4-5.1-Debian <<>> dns1.seax.edu
				;; global options: +cmd
				;; Got answer:
				;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 65338
				;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 1, ADDITIONAL: 1

				;; OPT PSEUDOSECTION:
				; EDNS: version: 0, flags:; udp: 4096
				; COOKIE: 2fcce849bcc98bede520f5565eba87f571c1eb662f3d8267 (good)
				;; QUESTION SECTION:
				;dns1.seax.edu.			IN	A

				;; ANSWER SECTION:
				dns1.seax.edu.		604800	IN	CNAME	dns.seax.edu.
				dns.seax.edu.		604800	IN	A	10.10.1.3

				;; AUTHORITY SECTION:
				seax.edu.		604800	IN	NS	dns.seax.edu.

				;; Query time: 0 msec
				;; SERVER: 10.10.1.3#53(10.10.1.3)
				;; WHEN: mar may 12 13:26:45 CEST 2020
				;; MSG SIZE  rcvd: 118

				Com podem veure, la resposta segueix el patró explicat al exemple del dns.seax.edu, amb la diferència que a l'apartat ANSWER SECTION, se'ns informa de que aquest nom és un àlies que pertany al dns amb nom dns.seax.edu i ip 10.10.1.3


			dig dns2.seax.edu


				; <<>> DiG 9.11.5-P4-5.1-Debian <<>> dns2.seax.edu
				;; global options: +cmd
				;; Got answer:
				;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 19781
				;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

				;; OPT PSEUDOSECTION:
				; EDNS: version: 0, flags:; udp: 4096
				; COOKIE: df9debd1fb10550d7adee7f25eba884b3fcc327978160078 (good)
				;; QUESTION SECTION:
				;dns2.seax.edu.			IN	A

				;; ANSWER SECTION:
				dns2.seax.edu.		604800	IN	A	10.10.1.4

				;; AUTHORITY SECTION:
				seax.edu.		604800	IN	NS	dns.seax.edu.

				;; ADDITIONAL SECTION:
				dns.seax.edu.		604800	IN	A	10.10.1.3

				;; Query time: 0 msec
				;; SERVER: 10.10.1.3#53(10.10.1.3)
				;; WHEN: mar may 12 13:28:11 CEST 2020
				;; MSG SIZE  rcvd: 120


			  Aquesta resolució correspon al nom (dns2.seax.edu) i direcció ip (10.10.1.4) del dns slave del domini.

	    dig rsServer.seax.edu


	      ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> rsServers.seax.edu
	      ;; global options: +cmd
	      ;; Got answer:
	      ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 30381
	      ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

	      ;; OPT PSEUDOSECTION:
	      ; EDNS: version: 0, flags:; udp: 4096
	      ; COOKIE: 6cc77dc7c9894bd64b09e52a5eba88067c890c1b73876a11 (good)
	      ;; QUESTION SECTION:
	      ;rsServers.seax.edu.		IN	A

	      ;; ANSWER SECTION:
	      rsServers.seax.edu.	604800	IN	A	10.10.5.1

	      ;; AUTHORITY SECTION:
	      seax.edu.		604800	IN	NS	dns.seax.edu.

	      ;; ADDITIONAL SECTION:
	      dns.seax.edu.		604800	IN	A	10.10.1.3

	      ;; Query time: 0 msec
	      ;; SERVER: 10.10.1.3#53(10.10.1.3)
	      ;; WHEN: mar may 12 13:27:02 CEST 2020
	      ;; MSG SIZE  rcvd: 125

	      Aquesta captura és sobre un un dels servidors que tenim a una de les xarxes del domini. Concretament la xarxa 10.10.5.0/28.

	  - Resolució de noms a partir a partir del fitxer de zones inverses (db.10.10):

	    dig -x 10.1.1.3:

	      ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> -x 10.10.1.3
	      ;; global options: +cmd
	      ;; Got answer:
	      ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 6404
	      ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

	      ;; OPT PSEUDOSECTION:
	      ; EDNS: version: 0, flags:; udp: 4096
	      ; COOKIE: 601df0ede609df75b9f1f2cc5eba88c739b0111681580a6b (good)
	      ;; QUESTION SECTION:
	      ;3.1.10.10.in-addr.arpa.		IN	PTR

	      ;; ANSWER SECTION:
	      3.1.10.10.in-addr.arpa.	604800	IN	PTR	dns.seax.edu.

	      ;; AUTHORITY SECTION:
	      10.10.in-addr.arpa.	604800	IN	NS	dns.seax.edu.

	      ;; ADDITIONAL SECTION:
	      dns.seax.edu.		604800	IN	A	10.10.1.3

	      ;; Query time: 0 msec
	      ;; SERVER: 10.10.1.3#53(10.10.1.3)
	      ;; WHEN: mar may 12 13:30:15 CEST 2020
	      ;; MSG SIZE  rcvd: 135

	      A diferència de la captura del exemple a partir del nom, en aquest cas en comptes de rebre la ip a partir d'un RR de tipus NS, rebem el nom del dispositiu a partir d'un registre PTR. Aquí podem apreciar bé que el RR PTR no és més que un punter a "10.10.in-addr.arpa". En aquest cas, com es pot apreciar a partir de la ip 10.10.1.3 el nom resolt és el del dns1 (dns.seax.edu).

	    Altres exemples:

	      dig -x 10.10.1.4 (dns esclau):

	        ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> -x 10.10.1.4
	        ;; global options: +cmd
	        ;; Got answer:
	        ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 29369
	        ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

	        ;; OPT PSEUDOSECTION:
	        ; EDNS: version: 0, flags:; udp: 4096
	        ; COOKIE: f29396a827b04339c93c53215eba88d567433310a84d14f3 (good)
	        ;; QUESTION SECTION:
	        ;4.1.10.10.in-addr.arpa.		IN	PTR

	        ;; ANSWER SECTION:
	        4.1.10.10.in-addr.arpa.	604800	IN	PTR	dns2.seax.edu.

	        ;; AUTHORITY SECTION:
	        10.10.in-addr.arpa.	604800	IN	NS	dns.seax.edu.

	        ;; ADDITIONAL SECTION:
	        dns.seax.edu.		604800	IN	A	10.10.1.3

	        ;; Query time: 0 msec
	        ;; SERVER: 10.10.1.3#53(10.10.1.3)
	        ;; WHEN: mar may 12 13:30:29 CEST 2020
	        ;; MSG SIZE  rcvd: 140

	      dig -x 10.10.5.1 (Un dels servidors que tenim a una de les xarxes del domini)

	        ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> -x 10.10.5.1
	        ;; global options: +cmd
	        ;; Got answer:
	        ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 5846
	        ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

	        ;; OPT PSEUDOSECTION:
	        ; EDNS: version: 0, flags:; udp: 4096
	        ; COOKIE: 18b0ab747fef624888a68b9a5eba88e22d11fc01474415a6 (good)
	        ;; QUESTION SECTION:
	        ;1.5.10.10.in-addr.arpa.		IN	PTR

	        ;; ANSWER SECTION:
	        1.5.10.10.in-addr.arpa.	604800	IN	PTR	rsServers.seax.edu.

	        ;; AUTHORITY SECTION:
	        10.10.in-addr.arpa.	604800	IN	NS	dns.seax.edu.

	        ;; ADDITIONAL SECTION:
	        dns.seax.edu.		604800	IN	A	10.10.1.3

	        ;; Query time: 0 msec
	        ;; SERVER: 10.10.1.3#53(10.10.1.3)
	        ;; WHEN: mar may 12 13:30:42 CEST 2020
	        ;; MSG SIZE  rcvd: 145


	  - Resolució de www.google.com a partir de recursivitat

	    dig www.google.com

	      ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> www.google.com
	      ;; global options: +cmd
	      ;; Got answer:
	      ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 40758
	      ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 4, ADDITIONAL: 9

	      ;; OPT PSEUDOSECTION:
	      ; EDNS: version: 0, flags:; udp: 4096
	      ; COOKIE: c921e5b627b9fd1e95a9664f5eba89173631d388620307f8 (good)
	      ;; QUESTION SECTION:
	      ;www.google.com.			IN	A

	      ;; ANSWER SECTION:
	      www.google.com.		278	IN	A	172.217.17.4

	      ;; AUTHORITY SECTION:
	      google.com.		172778	IN	NS	ns2.google.com.
	      google.com.		172778	IN	NS	ns3.google.com.
	      google.com.		172778	IN	NS	ns4.google.com.
	      google.com.		172778	IN	NS	ns1.google.com.

	      ;; ADDITIONAL SECTION:
	      ns1.google.com.		172778	IN	A	216.239.32.10
	      ns2.google.com.		172778	IN	A	216.239.34.10
	      ns3.google.com.		172778	IN	A	216.239.36.10
	      ns4.google.com.		172778	IN	A	216.239.38.10
	      ns1.google.com.		172778	IN	AAAA	2001:4860:4802:32::a
	      ns2.google.com.		172778	IN	AAAA	2001:4860:4802:34::a
	      ns3.google.com.		172778	IN	AAAA	2001:4860:4802:36::a
	      ns4.google.com.		172778	IN	AAAA	2001:4860:4802:38::a

	      ;; Query time: 0 msec
	      ;; SERVER: 10.10.1.3#53(10.10.1.3)
	      ;; WHEN: mar may 12 13:31:35 CEST 2020
	      ;; MSG SIZE  rcvd: 335

	      Com podem observar, a partir de la petició feta a dns per resoldre un nom de google, hem obtingut la resposta, el qual ens ha retornat la ip 172.217.17.4. A més a més, ens informa dels dns autoritatius que té (ns2.google.com, ns3.google.com, ns4.google.com i ns1.google.com), També podem veure les ip's que pertanyen a aquests noms al camp ADDITIONAL SECTION (tant ipv4 (RR de tipus A), com ipv6 (registres AAAA)).
	      Per acabar, hem de mirar al final de fitxer(al camp SERVER) per verificar que efectivament la petició has sigut recursiva, ja que el servidor dns que ens ha donat la resposta ha sigut el nostre dns autoritatiu (dns.seax.edu --> 10.10.1.3).

	#### 4.2. PROVES DE VALIDACIÓ DNS SLAVE (dns2) ####

	  Ara encenem el servidor dns2 (esclau) i fem un service bind9 reload al master.
	  Una vegada fet passem a fer les mateixes proves que al master per verificar que ha actualitzat els fitxers de zona.
	  NOTA: Apaguem la màquina del dns1 per simular una caiguda del master.

	  - Resolució de noms a partir a partir del fitxer de zones directes(db.seax.edu):

	    dig dns.seax.edu (dns1)

	      ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> dns.seax.edu
	      ;; global options: +cmd
	      ;; Got answer:
	      ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 13276
	      ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 1

	      ;; OPT PSEUDOSECTION:
	      ; EDNS: version: 0, flags:; udp: 4096
	      ; COOKIE: 0eb27c64ffb99b1efb67e8f05eba94310a0a9343d23cf02b (good)
	      ;; QUESTION SECTION:
	      ;dns.seax.edu.			IN	A

	      ;; ANSWER SECTION:
	      dns.seax.edu.		604800	IN	A	10.10.1.3

	      ;; AUTHORITY SECTION:
	      seax.edu.		604800	IN	NS	dns.seax.edu.

	      ;; Query time: 0 msec
	      ;; SERVER: 10.10.1.4#53(10.10.1.4)
	      ;; WHEN: mar may 12 14:18:57 CEST 2020
	      ;; MSG SIZE  rcvd: 99

	      Com podem veure a aquesta captura el servidor slave (10.10.1.4) ens respon amb la ip associada al nom dns.seax.edu (dns1)

	    dig dns1.seax.edu (àlies del dns.seax.edu)

	      ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> dns1.seax.edu
	      ;; global options: +cmd
	      ;; Got answer:
	      ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 3335
	      ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 1, ADDITIONAL: 1

	      ;; OPT PSEUDOSECTION:
	      ; EDNS: version: 0, flags:; udp: 4096
	      ; COOKIE: b3150b8fd2261699164f5dde5eba9439689e5d80e4089712 (good)
	      ;; QUESTION SECTION:
	      ;dns1.seax.edu.			IN	A

	      ;; ANSWER SECTION:
	      dns1.seax.edu.		604800	IN	CNAME	dns.seax.edu.
	      dns.seax.edu.		604800	IN	A	10.10.1.3

	      ;; AUTHORITY SECTION:
	      seax.edu.		604800	IN	NS	dns.seax.edu.

	      ;; Query time: 0 msec
	      ;; SERVER: 10.10.1.4#53(10.10.1.4)
	      ;; WHEN: mar may 12 14:19:05 CEST 2020
	      ;; MSG SIZE  rcvd: 118

	    dig dns2.seax.edu (servidor esclau o dns2)

	      ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> dns2.seax.edu
	      ;; global options: +cmd
	      ;; Got answer:
	      ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 65366
	      ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

	      ;; OPT PSEUDOSECTION:
	      ; EDNS: version: 0, flags:; udp: 4096
	      ; COOKIE: e0640f82a5b91f1d57fc4c6d5eba9446cc4c45fe54cd62e8 (good)
	      ;; QUESTION SECTION:
	      ;dns2.seax.edu.			IN	A

	      ;; ANSWER SECTION:
	      dns2.seax.edu.		604800	IN	A	10.10.1.4

	      ;; AUTHORITY SECTION:
	      seax.edu.		604800	IN	NS	dns.seax.edu.

	      ;; ADDITIONAL SECTION:
	      dns.seax.edu.		604800	IN	A	10.10.1.3

	      ;; Query time: 0 msec
	      ;; SERVER: 10.10.1.4#53(10.10.1.4)
	      ;; WHEN: mar may 12 14:19:18 CEST 2020
	      ;; MSG SIZE  rcvd: 120

	    dig rsServer.seax.edu (un dels servidors d'una de les xarxes del domini)

	      ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> rsServers.seax.edu
	      ;; global options: +cmd
	      ;; Got answer:
	      ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 33508
	      ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

	      ;; OPT PSEUDOSECTION:
	      ; EDNS: version: 0, flags:; udp: 4096
	      ; COOKIE: f6176c95a90afa5b0ecb29f05eba9459b6e57a161fb03630 (good)
	      ;; QUESTION SECTION:
	      ;rsServers.seax.edu.		IN	A

	      ;; ANSWER SECTION:
	      rsServers.seax.edu.	604800	IN	A	10.10.5.1

	      ;; AUTHORITY SECTION:
	      seax.edu.		604800	IN	NS	dns.seax.edu.

	      ;; ADDITIONAL SECTION:
	      dns.seax.edu.		604800	IN	A	10.10.1.3

	      ;; Query time: 0 msec
	      ;; SERVER: 10.10.1.4#53(10.10.1.4)
	      ;; WHEN: mar may 12 14:19:37 CEST 2020
	      ;; MSG SIZE  rcvd: 125


	  - Resolució de www.google.com a partir de recursivitat

		dig www.google.com

	    ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> www.google.com
	    ;; global options: +cmd
	    ;; Got answer:
	    ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 61798
	    ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 4, ADDITIONAL: 9

	    ;; OPT PSEUDOSECTION:
	    ; EDNS: version: 0, flags:; udp: 4096
	    ; COOKIE: 7e4037cc087a743e2f09f1375eba94e9586e9141c722e347 (good)
	    ;; QUESTION SECTION:
	    ;www.google.com.			IN	A

	    ;; ANSWER SECTION:
	    www.google.com.		300	IN	A	172.217.16.228

	    ;; AUTHORITY SECTION:
	    google.com.		172799	IN	NS	ns2.google.com.
	    google.com.		172799	IN	NS	ns3.google.com.
	    google.com.		172799	IN	NS	ns4.google.com.
	    google.com.		172799	IN	NS	ns1.google.com.

	    ;; ADDITIONAL SECTION:
	    ns1.google.com.		172799	IN	A	216.239.32.10
	    ns2.google.com.		172799	IN	A	216.239.34.10
	    ns3.google.com.		172799	IN	A	216.239.36.10
	    ns4.google.com.		172799	IN	A	216.239.38.10
	    ns1.google.com.		172799	IN	AAAA	2001:4860:4802:32::a
	    ns2.google.com.		172799	IN	AAAA	2001:4860:4802:34::a
	    ns3.google.com.		172799	IN	AAAA	2001:4860:4802:36::a
	    ns4.google.com.		172799	IN	AAAA	2001:4860:4802:38::a

	    ;; Query time: 504 msec
	    ;; SERVER: 10.10.1.4#53(10.10.1.4)
	    ;; WHEN: mar may 12 14:22:01 CEST 2020
	    ;; MSG SIZE  rcvd: 335


	    Com podem observar, a partir de la petició feta a dns per resoldre un nom de google, hem obtingut la resposta, el qual ens ha retornat la ip 172.217.16.228. A més a més, ens informa dels dns autoritatius que té (ns2.google.com, ns3.google.com, ns4.google.com i ns1.google.com), També podem veure les ip's que pertanyen a aquests noms al camp ADDITIONAL SECTION (tant ipv4 (RR de tipus A), com ipv6 (registres AAAA)).

	    Per acabar, hem de mirar al final de fitxer(al camp SERVER) per verificar que efectivament la petició has sigut recursiva, ja que el servidor dns que ens ha donat la resposta ha sigut el nostre dns slave(dns.seax.edu --> 10.10.1.4).
	    Cal destacar que en aquest cas la resposta ha sigut una ip diferent a la que ens ha donat el master abans. Això no te més importància que dir que google té molts dns vinculats a www.google.com.

	  - Resolució de noms a partir a partir del fitxer de zones inverses (db.10.10):

	    dig -x 10.10.1.3


	      ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> -x 10.10.1.3
	      ;; global options: +cmd
	      ;; Got answer:
	      ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 1036
	      ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

	      ;; OPT PSEUDOSECTION:
	      ; EDNS: version: 0, flags:; udp: 4096
	      ; COOKIE: bb46490f94d11660aa50a5605eba94fdf50e0bbf13c8149b (good)
	      ;; QUESTION SECTION:
	      ;3.1.10.10.in-addr.arpa.		IN	PTR

	      ;; ANSWER SECTION:
	      3.1.10.10.in-addr.arpa.	604800	IN	PTR	dns.seax.edu.

	      ;; AUTHORITY SECTION:
	      1.10.10.in-addr.arpa.	604800	IN	NS	dns.seax.edu.

	      ;; ADDITIONAL SECTION:
	      dns.seax.edu.		604800	IN	A	10.10.1.3

	      ;; Query time: 0 msec
	      ;; SERVER: 10.10.1.4#53(10.10.1.4)
	      ;; WHEN: mar may 12 14:22:21 CEST 2020
	      ;; MSG SIZE  rcvd: 135

	    dig -x 10.10.1.4


	      ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> -x 10.10.1.4
	      ;; global options: +cmd
	      ;; Got answer:
	      ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 25598
	      ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

	      ;; OPT PSEUDOSECTION:
	      ; EDNS: version: 0, flags:; udp: 4096
	      ; COOKIE: cfb1251177ebfeb921127e8d5eba9502c1cfdd5f4a452865 (good)
	      ;; QUESTION SECTION:
	      ;4.1.10.10.in-addr.arpa.		IN	PTR

	      ;; ANSWER SECTION:
	      4.1.10.10.in-addr.arpa.	604800	IN	PTR	dns2.seax.edu.

	      ;; AUTHORITY SECTION:
	      1.10.10.in-addr.arpa.	604800	IN	NS	dns.seax.edu.

	      ;; ADDITIONAL SECTION:
	      dns.seax.edu.		604800	IN	A	10.10.1.3

	      ;; Query time: 0 msec
	      ;; SERVER: 10.10.1.4#53(10.10.1.4)
	      ;; WHEN: mar may 12 14:22:26 CEST 2020
	      ;; MSG SIZE  rcvd: 140

	  dig -x 10.10.5.1


	    ; <<>> DiG 9.11.5-P4-5.1-Debian <<>> -x 10.10.5.1
	    ;; global options: +cmd
	    ;; Got answer:
	    ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 37269
	    ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

	    ;; OPT PSEUDOSECTION:
	    ; EDNS: version: 0, flags:; udp: 4096
	    ; COOKIE: d87b31511d2a61a75c774f995eba950bac607af077495b44 (good)
	    ;; QUESTION SECTION:
	    ;1.5.10.10.in-addr.arpa.		IN	PTR

	    ;; ANSWER SECTION:
	    1.5.10.10.in-addr.arpa.	604800	IN	PTR	rsServers.seax.edu.

	    ;; AUTHORITY SECTION:
	    5.10.10.in-addr.arpa.	604800	IN	NS	dns.seax.edu.

	    ;; ADDITIONAL SECTION:
	    dns.seax.edu.		604800	IN	A	10.10.1.3

	    ;; Query time: 0 msec
	    ;; SERVER: 10.10.1.4#53(10.10.1.4)
	    ;; WHEN: mar may 12 14:22:35 CEST 2020
	    ;; MSG SIZE  rcvd: 145
